{"version":3,"sources":["assets/img/reactlogo.png","assets/img/photo-1431578500526-4d9613015464.jpeg","assets/img/faces/face-3.jpg","redux/constants/auth.js","redux/constants/userDetail.js","redux/reducer/auth.js","redux/reducer/userDetails.js","redux/reducer/index.js","redux/store.js","utils/inteceptor.js","config/config.js","components/Common/common.js","utils/api.js","components/Common/input.js","constants/validation.js","utils/validator.js","redux/action/auth.js","views/auth/login.js","redux/action/userDetail.js","views/auth/forgot.js","views/auth/reset.js","views/UserProfile.js","views/comingSoon.js","views/technology/list.js","views/technology/add.js","views/experts/list.js","views/experts/add.js","views/customer/list.js","views/customer/add.js","views/template/list.js","views/template/add.js","views/cms/list.js","views/cms/add.js","views/faq/list.js","views/faq/add.js","views/attack/add.js","views/law/list.js","views/law/add.js","views/quest/list.js","views/quest/add.js","views/inbox/add.js","views/global/index.js","views/dashboard/index.js","views/dashboard/insights.js","routes.js","views/inbox/list.js","views/profile/profile.js","views/profile/changepassword.js","views/attack/list.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","views/Dashboard.js","siderbar.js","assets/img/sidebar-3.jpg","layouts/Admin.js","layouts/Auth.js","app.js","index.js"],"names":["TOKEN","UserDetail","initialState","token","userId","authReducer","state","action","type","payload","_id","name","mobile","email","role","userDetailReducer","rootReducer","combineReducers","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","a","console","log","error","Promise","reject","response","option","position","autoClose","hideProgressBar","closeOnClick","draggable","limit","ShowToast","text","toast","clearWaitingQueue","success","ErrorText","props","className","title","DefaultDocument","file","url","split","Image","src","style","maxHeight","maxWidth","alignItems","margin","href","target","post","formData","options","getState","Authorization","then","data","catch","message","localStorage","clear","location","reload","put","get","deleteApi","delete","DefaultInput","htmlFor","id","placeholder","ref","refr","value","onBlur","onChange","required","readOnly","disabled","maxLength","multiple","accept","DefaultTextarea","DefaultInputWithIcon","onClick","customType","DefaultSelect","hideLable","defaultValue","selected","map","ele","index","String","label","toLowerCase","replace","DefaultMobileInput","international","withCountryCallingCode","defaultCountry","smartCaret","DefaultEditor","editor","ClassicEditor","toolbar","onReady","event","getData","onFocus","ConstantMessage","emailInvalid","password","strongPassword","confirmPassword","passmisMatched","fName","lName","currentPassword","newPassword","confirmNewPassword","nameEN","nameDE","country","titleEN","titleDE","slug","contentEN","contentDE","question","answer","experience","content","validateLogin","values","errors","warning","test","validateForgetPassword","validateResetPassword","trim","validateProfile","validateChangePass","validateTechnology","validateEmail","validateTemplate","validateFaq","validateAttack","descriptionEN","descriptionDE","authentication","actionType","actionData","Login","dispatch","useDispatch","handleLogin","status","setTimeout","history","Container","fluid","Row","Col","md","Card","Header","Title","as","Body","initialValues","validate","onSubmit","setSubmitting","login","handleSubmit","handleChange","setFieldTouched","touched","isSubmitting","padding","to","Forgot","forgetPassword","params","useParams","useHistory","useState","paramsData","setparamsData","useEffect","atob","otp","handleResponse","push","submit","User","Form","Group","Control","cols","rows","Button","variant","alt","require","default","e","preventDefault","ComingSoon","TechnologyList","page","perPage","searchItem","pageData","setpageData","userData","setuserData","totalPages","settotalPages","setsearchItem","pages","handleStatusChange","handleDelete","Table","bordered","hover","responsive","size","confirm","statusChange","ButtonGroup","length","itemClass","linkClass","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","TechnologyAdd","formRef","useRef","getSingle","handleSingleData","current","setFieldValue","goBack","innerRef","ExpertList","imageUrl","setimageUrl","image","roundedCircle","borderRadius","ExpertAdd","setExperience","technology","setTechnology","fileRef","generateExperience","getTechnology","array","handleTechnology","Array","isArray","temp","validateExpert","FormData","append","files","marginTop","marginBottom","validateCustomer","val","CmsList","CmsAdd","FaqList","FaqAdd","AttackAdd","Country","LawList","LawAdd","QuestList","displayId","questType","customerId","expertId","isComplete","Badge","QuestAdd","questData","setQuestData","expertData","setexpertData","threadData","setthreadData","imageArray","setimageArray","getAllExpert","handleExpert","threads","description","isLiveSession","moment","liveSession","format","documents","assign","questId","handleAssignResponse","alert","handleAnswer","startMeeting","title_en","title_gr","description_en","description_gr","from","lg","customerName","customerEmail","marginLeft","class","dangerouslySetInnerHTML","__html","expertEmail","threadBy","element","ContactAdd","GlobalAdd","phone","address","facebook","twitter","linkden","creditType","creditLiveSession","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","plugins","legend","display","labels","datasets","borderColor","backgroundColor","BarElement","maintainAspectRatio","mainRoutes","path","component","setquestData","transaction","settransaction","chartData","setchartData","getChartData","users","transactions","handleChartResponse","item","height","overflow","createdAt","width","amount","newUserData","setnewUserData","insightsType","setinsightsType","setuserList","setuserAmountList","questPerUser","setquestPerUser","barChartData","setbarChartData","showQuestData","setshowQuestData","priority","meeting","temp1","total","newArray","getRevenuePerUser","user","count","userList","amountList","active","questComplete","quest","percent","priorityQuest","priorityPercent","meetingQuest","meetingPercent","number","solved","icon","layout","show","setShow","reply","setReply","handleReply","isReplied","Modal","onHide","closeButton","Footer","sendReply","getProfile","resetForm","flex","justifyContent","gender","CustomerList","CustomerAdd","TemplateList","TemplateAdd","authRoutes","Reset","userDetail","useSelector","useLocation","Navbar","bg","expand","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","i","pathname","toUpperCase","getBrandText","Toggle","Collapse","Nav","navbar","Dropdown","Item","Link","Menu","left","Component","Sidebar","color","routes","backgroundImage","prop","redirect","upgrade","routeName","indexOf","activeClassName","Dashboard","sidebarRoutes","UserProfile","Admin","React","sidebarImage","hasImage","mainPanel","scrollTop","scrollingElement","window","innerWidth","getElementById","parentNode","AdminNavbar","render","exact","Auth","App","AuthStack","ReactDOM","loading"],"mappings":"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","file":"static/js/main.f2a45465.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","export default __webpack_public_path__ + \"static/media/photo-1431578500526-4d9613015464.0c528dc7.jpeg\";","export default __webpack_public_path__ + \"static/media/face-3.62232de2.jpg\";","export const TOKEN = \"TOKEN\";\n","export const UserDetail = \"UserDetail\";\n","import { TOKEN } from \"../constants\";\nconst initialState = {\n  token: null,\n  userId: null,\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOKEN:\n      return {\n        ...state,\n        token: action.payload.token,\n        userId: action.payload.userId,\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","import { UserDetail } from \"../constants\";\nconst initialState = {\n  _id: null,\n  name: null,\n  mobile: null,\n  email: null,\n  role: null,\n};\nconst userDetailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UserDetail:\n      return {\n        ...state,\n        _id: action.payload._id,\n        name: action.payload.name,\n        mobile: action.payload.mobile,\n        email: action.payload.email,\n        role: action.payload.role,\n      };\n    default:\n      return state;\n  }\n};\nexport default userDetailReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./auth\";\nimport userDetailReducer from \"./userDetails\";\n\nconst rootReducer = combineReducers({\n  authReducer,\n  userDetailReducer,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport rootReducer from \"./reducer/index\";\nimport thunk from \"redux-thunk\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"authReducer\", \"userDetailReducer\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, applyMiddleware(thunk));\nexport const persistor = persistStore(store);\n","import axios from \"axios\";\nimport { baseURL } from \"../config/config\";\n\nvar instance = axios.create({\n  baseURL: baseURL,\n  timeout: 120000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"multipart/form-data\",\n  },\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n  async (config) => {\n    console.log(\"config\", config);\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","// export const baseURL = \"http://localhost:2500/admin\";\nexport const baseURL = \"https://cyberoctopus.devtechnosys.tech:17272/admin\";\n","import React, { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\n\nimport { toast } from \"react-toastify\";\n\nconst option = {\n  position: \"top-right\",\n  autoClose: 1500,\n  hideProgressBar: false,\n  closeOnClick: true,\n  draggable: false,\n  limit: 1,\n};\n\nexport const ShowToast = (text, type) => {\n  toast.clearWaitingQueue();\n  if (type) toast.success(text, option);\n  else toast.error(text, option);\n};\n\nexport const ErrorText = (props) => {\n  return (\n    <>\n      <div>\n        <p className=\"errorText\">{props.title}</p>\n      </div>\n    </>\n  );\n};\n\nexport const DefaultLoader = (props) => {\n  return (\n    <>\n      {props.visible && (\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={\"100%\"} width={\"100%\"} />\n      )}\n    </>\n  );\n};\n\nexport const DefaultDocument = (props) => {\n  let type = 1;\n  const file = props.url.split(\".\");\n  if (file[1] == \"jpeg\" || file[1] == \"jpg\" || file[1] == \"png\") {\n    type = 1;\n  } else if (file[1] == \"mp4\" || file[1] == \"mov\" || file[1] == \"mkv\") {\n    type = 2;\n  } else {\n    type = 2;\n  }\n  return (\n    <>\n      {type == 1 ? (\n        <Image\n          src={`${props.url}`}\n          style={{\n            maxHeight: \"80px\",\n            maxWidth: \"80px\",\n            alignItems: \"center\",\n            margin: \"10px\",\n          }}\n        />\n      ) : type == 2 ? (\n        <>\n          <a\n            className=\"btn btn-primary\"\n            style={{ margin: \"2px\" }}\n            href={props.url}\n            target={\"_blank\"}\n          >\n            Document\n          </a>\n        </>\n      ) : (\n        <>{/* <img src=\"/images/pdf-icon.svg\"></img> */}</>\n      )}\n    </>\n  );\n};\n","import instance from \"./inteceptor\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ShowToast } from \"components/Common/common\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { store } from \"../redux/store\";\n\nexport const post = async (url, formData, type = 0) => {\n  const options = {\n    headers: {\n      Accept: type ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": type ? \"multipart/form-data\" : \"application/json\",\n    },\n  };\n\n  const token = store.getState();\n\n  if (token?.authReducer.token) {\n    options.headers.Authorization = `Bearer ${token?.authReducer.token}`;\n  }\n  return instance\n    .post(url, formData, options)\n    .then(function (response) {\n      console.log(\"success\", response);\n      return response.data;\n    })\n    .catch(function (error) {\n      ShowToast(error.message, 0);\n      if (error.message == \"Request failed with status code 401\") {\n        localStorage.clear();\n        location.reload();\n      }\n    });\n};\n\nexport const put = async (url, formData, type = 0) => {\n  const options = {\n    headers: {\n      Accept: type ? \"multipart/form-data\" : \"application/json\",\n      \"Content-Type\": type ? \"multipart/form-data\" : \"application/json\",\n    },\n  };\n  const token = store.getState();\n\n  if (token?.authReducer.token) {\n    options.headers.Authorization = `Bearer ${token?.authReducer.token}`;\n  }\n  return instance\n    .put(url, formData, options)\n    .then(function (response) {\n      console.log(\"success\", response);\n      return response.data;\n    })\n    .catch(function (error) {\n      ShowToast(error.message, 0);\n      if (error.message == \"Request failed with status code 401\") {\n        localStorage.clear();\n        location.reload();\n      }\n    });\n};\n\nexport const get = async (url, type = 0) => {\n  const options = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = store.getState();\n\n  if (token?.authReducer.token) {\n    options.headers.Authorization = `Bearer ${token?.authReducer.token}`;\n  }\n\n  return instance\n    .get(url, options)\n    .then(function (response) {\n      console.log(\"success\", response);\n      return response.data;\n    })\n    .catch(function (error) {\n      console.log(error, \"error\");\n      ShowToast(error.message, 0);\n      if (error.message == \"Request failed with status code 401\") {\n        localStorage.clear();\n        location.reload();\n      }\n    });\n};\n\nexport const deleteApi = async (url, type = 0) => {\n  const options = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = store.getState();\n\n  if (token?.authReducer.token) {\n    options.headers.Authorization = `Bearer ${token?.authReducer.token}`;\n  }\n\n  return instance\n    .delete(url, options)\n    .then(function (response) {\n      console.log(\"success\", response);\n      return response.data;\n    })\n    .catch(function (error) {\n      ShowToast(error.message, 0);\n      if (error.message == \"Request failed with status code 401\") {\n        localStorage.clear();\n        location.reload();\n      }\n    });\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { ErrorText } from \"./common\";\nimport PhoneInput from \"react-phone-number-input\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nexport const DefaultInput = (props) => {\n  return (\n    <>\n      <div>\n        <label htmlFor={props.id}>{props.name}</label>\n        <input\n          type={props.type}\n          className=\"form-control default-input-class\"\n          placeholder={props.placeholder}\n          name={props.name}\n          id={props.id}\n          ref={props.refr}\n          value={props.value}\n          onBlur={props.onBlur}\n          onChange={props.onChange}\n          required={props.required}\n          readOnly={props.readOnly}\n          disabled={props.disabled}\n          maxLength={props.maxLength}\n          multiple={props.multiple}\n          accept={props.accept}\n        />\n        {props.error ? <ErrorText title={props.error} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport const DefaultTextarea = (props) => {\n  return (\n    <>\n      <div>\n        <label htmlFor={props.id}>{props.name}</label>\n        <textarea\n          type={props.type}\n          className=\"form-control default-input-class\"\n          placeholder={props.placeholder}\n          name={props.name}\n          id={props.id}\n          ref={props.refr}\n          value={props.value}\n          onBlur={props.onBlur}\n          onChange={props.onChange}\n          required={props.required}\n          readOnly={props.readOnly}\n          disabled={props.disabled}\n          maxLength={props.maxLength}\n        ></textarea>\n\n        {props.error ? <ErrorText title={props.error} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport const DefaultInputWithIcon = (props) => {\n  return (\n    <>\n      <div>\n        <div className=\"input-group mb-3\">\n          <input\n            type={props.type}\n            className=\"form-control\"\n            placeholder={props.placeholder}\n            name={props.name}\n            value={props.value}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            required={props.required}\n            readOnly={props.readOnly}\n            disabled={props.disabled}\n            maxLength={props.maxLength}\n          />\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={props.onClick}\n          >\n            {props.customType == \"search\" ? (\n              <i className=\"fas fa-search\"></i>\n            ) : null}\n          </button>\n        </div>\n\n        {props.error ? <ErrorText title={props.error} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport const DefaultSelect = (props) => {\n  return (\n    <>\n      <div>\n        {props.hideLable ? null : (\n          <label htmlFor={props.id}>{props.name}</label>\n        )}\n\n        <select\n          name={props.name}\n          id={props.id}\n          className={\"form-control\"}\n          value={props.value}\n          defaultValue={props.value}\n          onBlur={props.onBlur}\n          onChange={props.onChange}\n          multiple={props.multiple}\n        >\n          <option disabled selected>\n            {props.placeholder}\n          </option>\n          {props.data\n            ? props.data.map((ele, index) => {\n                return (\n                  <option\n                    key={index}\n                    value={\n                      props.type == \"country\"\n                        ? String(ele.label).toLowerCase().replace(\" \", \"-\")\n                        : ele.value\n                    }\n                  >\n                    {ele.label}\n                  </option>\n                );\n              })\n            : null}\n        </select>\n        {props.error ? <ErrorText title={props.error} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport const DefaultMobileInput = (props) => {\n  return (\n    <>\n      <div>\n        <label htmlFor={props.id}>{props.name}</label>\n        <PhoneInput\n          className={\"form-control\"}\n          placeholder={props.placeholder}\n          value={props.value}\n          onChange={props.onChange}\n          international={false}\n          withCountryCallingCode={true}\n          defaultCountry={props.defaultCountry}\n          maxLength={props.maxLength}\n          smartCaret={props.smartCaret}\n          defaultCountry={'IN'}\n        />\n        {props.error ? <ErrorText title={props.error} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport const DefaultEditor = (props) => {\n  return (\n    <>\n      <div>\n        <label htmlFor={props.id}>{props.name}</label>\n        <CKEditor\n          editor={ClassicEditor}\n          config={{\n            toolbar: [\n              \"undo\",\n              \"redo\",\n              \"bold\",\n              \"italic\",\n              \"blockQuote\",\n              \"heading\",\n              \"link\",\n              \"numberedList\",\n              \"bulletedList\",\n              \"insertTable\",\n              \"tableColumn\",\n              \"tableRow\",\n              \"mergeTableCells\",\n            ],\n          }}\n          data={props.value}\n          onReady={(editor) => {}}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            props.onChange(data);\n          }}\n          onBlur={props.onBlur}\n          onFocus={props.onFocus}\n        />\n        {props.error ? <ErrorText title={props.error} /> : null}\n      </div>\n    </>\n  );\n};\n","export const ConstantMessage = {\n  adminLogin: {\n    email: \"Please enter email\",\n    emailInvalid: \"Please enter valid email\",\n    password: \"Please enter password\",\n  },\n  adminResetPassword: {\n    password: \"Please enter password\",\n    strongPassword:\n      \"Password should contain lower & uppercase, a number, and a special character with minimum 6 character\",\n    confirmPassword: \"Please enter confirm password\",\n    passmisMatched: \"password and confirm password do not match\",\n  },\n  profile: {\n    fName: \"Please enter first name\",\n    lName: \"Please enter last name\",\n    mobile: \"Mobile is required\",\n  },\n  changePassword: {\n    currentPassword: \"Please enter current password\",\n    newPassword: \"Please enter new password\",\n    confirmNewPassword: \"Please enter confirm password\",\n    strongPassword:\n      \"Password should contain lower & uppercase, a number, and a special character with minimum 6 character\",\n    passmisMatched: \"password and confirm password do not match\",\n  },\n  technology: {\n    nameEN: \"Please enter name (en)\",\n    nameDE: \"Please enter name (de)\",\n  },\n  template: {\n    country: \"Please enter country\",\n    titleEN: \"Please enter title\",\n    titleDE: \"Please enter title\",\n    slug: \"Please enter slug\",\n    contentEN: \"Please enter content\",\n    contentDE: \"Please enter content\",\n  },\n  faq: {\n    question: \"Please enter question\",\n    answer: \"Please enter answer\",\n  },\n  expert: {\n    fName: \"Please enter first name\",\n    lName: \"Please enter last name\",\n    email: \"Please enter email\",\n    emailInvalid: \"Please enter valid email\",\n    mobile: \"Mobile is required\",\n    experience: \"Experience is required\",\n    password: \"Please enter password\",\n    strongPassword:\n      \"Password should contain lower & uppercase, a number, and a special character with minimum 6 character\",\n    confirmPassword: \"Please enter confirm password\",\n    passmisMatched: \"password and confirm password do not match\",\n  },\n  attack: {\n    titleEN: \"Please enter title\",\n    titleDE: \"Please enter title\",\n    descriptionEN: \"Please enter description\",\n    descriptionDE: \"Please enter description\",\n  },\n  emailTemplate: {\n    title: \"Please enter title\",\n    slug: \"Please enter slug\",\n    content: \"Please enter content\",\n  },\n};\n","import { ConstantMessage } from \"../constants/validation\";\n\n// ******************************* Login validation ******************************* //\nexport const validateLogin = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.adminLogin;\n\n  if (!values.email) {\n    errors.email = warning.email;\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = warning.emailInvalid;\n  }\n\n  if (!values.password) {\n    errors.password = warning.password;\n  }\n  return errors;\n};\n\nexport const validateForgetPassword = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.adminLogin;\n\n  if (!values.email) {\n    errors.email = warning.email;\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = warning.emailInvalid;\n  }\n\n  return errors;\n};\n\nexport const validateResetPassword = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.adminResetPassword;\n\n  if (!values.password.trim()) {\n    errors.password = warning.password;\n  } else if (\n    !/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(\n      values.password\n    )\n  ) {\n    errors.password = warning.strongPassword;\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = warning.confirmPassword;\n  } else if (values.confirmPassword !== values.password) {\n    errors.confirmPassword = warning.passmisMatched;\n  }\n\n  return errors;\n};\n\nexport const validateProfile = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.profile;\n\n  if (!values.fName) {\n    errors.fName = warning.fName;\n  }\n\n  if (!values.lName) {\n    errors.lName = warning.lName;\n  }\n\n  if (!values.mobile) {\n    errors.mobile = warning.mobile;\n  }\n\n  return errors;\n};\n\nexport const validateChangePass = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.changePassword;\n\n  if (!values.currentPassword) {\n    errors.currentPassword = warning.currentPassword;\n  }\n\n  if (!values.newPassword) {\n    errors.newPassword = warning.newPassword;\n  } else if (\n    !/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(\n      values.newPassword\n    )\n  ) {\n    errors.newPassword = warning.strongPassword;\n  }\n\n  if (!values.confirmNewPassword) {\n    errors.confirmNewPassword = warning.confirmNewPassword;\n  } else if (values.newPassword !== values.confirmNewPassword) {\n    errors.confirmNewPassword = warning.passmisMatched;\n  }\n\n  return errors;\n};\n\nexport const validateTechnology = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.technology;\n\n  if (!values.nameEN) {\n    errors.nameEN = warning.nameEN;\n  }\n\n  if (!values.nameDE) {\n    errors.nameDE = warning.nameDE;\n  }\n\n  return errors;\n};\n\nexport const validateExpert = (values, id) => {\n  const errors = {};\n  const warning = ConstantMessage.expert;\n\n  if (!values.fName) {\n    errors.fName = warning.fName;\n  }\n\n  if (!values.lName) {\n    errors.lName = warning.lName;\n  }\n\n  if (!values.email) {\n    errors.email = warning.email;\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = warning.emailInvalid;\n  }\n\n  // if (!values.mobile) {\n  //   errors.mobile = warning.mobile;\n  // }\n\n  if (!values.experience) {\n    errors.experience = warning.experience;\n  }\n\n  if (!id) {\n    if (!values.password) {\n      errors.password = warning.password;\n    } else if (\n      !/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(\n        values.password\n      )\n    ) {\n      errors.password = warning.strongPassword;\n    }\n\n    if (!values.confirmPassword) {\n      errors.confirmPassword = warning.confirmPassword;\n    } else if (values.password !== values.confirmPassword) {\n      errors.confirmPassword = warning.passmisMatched;\n    }\n  }\n  return errors;\n};\n\nexport const validateCustomer = (values, id) => {\n  const errors = {};\n  const warning = ConstantMessage.expert;\n\n  if (!values.fName) {\n    errors.fName = warning.fName;\n  }\n\n  if (!values.lName) {\n    errors.lName = warning.lName;\n  }\n\n  if (!values.email) {\n    errors.email = warning.email;\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = warning.emailInvalid;\n  }\n\n  if (!id) {\n    if (!values.password) {\n      errors.password = warning.password;\n    } else if (\n      !/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(\n        values.password\n      )\n    ) {\n      errors.password = warning.strongPassword;\n    }\n\n    if (!values.confirmPassword) {\n      errors.confirmPassword = warning.confirmPassword;\n    } else if (values.password !== values.confirmPassword) {\n      errors.confirmPassword = warning.passmisMatched;\n    }\n  }\n  return errors;\n};\n\nexport const validateEmail = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.emailTemplate;\n\n  if (!values.title) {\n    errors.title = warning.title;\n  }\n\n  if (!values.slug) {\n    errors.slug = warning.slug;\n  }\n\n  if (!values.content) {\n    errors.content = warning.content;\n  }\n\n  return errors;\n};\n\nexport const validateTemplate = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.template;\n\n  if (!values.titleEN) {\n    errors.titleEN = warning.titleEN;\n  }\n\n  if (!values.titleDE) {\n    errors.titleDE = warning.titleDE;\n  }\n\n  if (!values.slug) {\n    errors.slug = warning.slug;\n  }\n\n  if (!values.contentEN) {\n    errors.contentEN = warning.contentEN;\n  }\n\n  if (!values.contentDE) {\n    errors.contentDE = warning.contentDE;\n  }\n\n  return errors;\n};\n\nexport const validateFaq = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.faq;\n\n  if (!values.question) {\n    errors.question = warning.question;\n  }\n\n  if (!values.answer) {\n    errors.answer = warning.answer;\n  }\n\n  return errors;\n};\n\nexport const validateAttack = (values) => {\n  const errors = {};\n  const warning = ConstantMessage.template;\n\n  if (!values.country) {\n    errors.country = warning.country;\n  } \n  \n  if (!values.titleEN) {\n    errors.titleEN = warning.titleEN;\n  }\n\n  if (!values.titleDE) {\n    errors.titleDE = warning.titleDE;\n  }\n\n  if (!values.descriptionEN) {\n    errors.descriptionEN = warning.descriptionEN;\n  }\n\n  if (!values.descriptionDE) {\n    errors.descriptionDE = warning.descriptionDE;\n  }\n\n  return errors;\n};\n","export const authentication = (actionType, actionData) => {\n  return {\n    type: actionType,\n    payload: actionData,\n  };\n};\n","import React from \"react\";\n\n// react-bootstrap components\nimport { Button, Card, Form, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post } from \"../../utils/api\";\nimport { DefaultInput } from \"../../components/Common/input\";\nimport { validateLogin } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { authentication } from \"../../redux/action/auth\";\nimport { userDetail } from \"../../redux/action/userDetail\";\nimport { TOKEN, UserDetail } from \"../../redux/constants/index\";\n\nfunction Login(props) {\n  const dispatch = useDispatch();\n  const login = (values) => {\n    let formData = {\n      email: values.email,\n      password: values.password,\n    };\n    post(\"/auth/login\", formData).then((data) => handleLogin(data));\n  };\n\n  const handleLogin = (data) => {\n    ShowToast(data.message, data.status);\n    if (data.status) {\n      setTimeout(() => {\n        dispatch(\n          authentication(TOKEN, { token: data.token, userId: data.data._id })\n        );\n        dispatch(\n          userDetail(UserDetail, {\n            _id: data.data._id,\n            name: data.data.fName + \" \" + data.data.lName,\n            mobile: data.data.mobile,\n            email: data.data.email,\n            role: data.data.role,\n          })\n        );\n        props.history.replace(`/admin/dashboard`);\n      }, 500);\n    }\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row className=\"auth\">\n          <Col md=\"3\"></Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h2\">Login</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Formik\n                  initialValues={{ email: \"\", password: \"\" }}\n                  validate={validateLogin}\n                  onSubmit={(values, { setSubmitting }) => {\n                    login(values);\n                    setSubmitting(false);\n                  }}\n                >\n                  {(props) => (\n                    <form onSubmit={props.handleSubmit}>\n                      <DefaultInput\n                        type={\"email\"}\n                        placeholder={\"Email\"}\n                        name={\"email\"}\n                        value={props.values.email}\n                        onChange={props.handleChange(\"email\")}\n                        onBlur={() => props.setFieldTouched(\"email\", true)}\n                        error={props.touched.email && props.errors.email}\n                      />\n\n                      <DefaultInput\n                        type={\"password\"}\n                        placeholder={\"Password\"}\n                        name={\"password\"}\n                        value={props.values.password}\n                        onChange={props.handleChange(\"password\")}\n                        onBlur={() => props.setFieldTouched(\"password\", true)}\n                        error={props.touched.password && props.errors.password}\n                      />\n\n                      <button\n                        type=\"submit\"\n                        className={\"btn btn-primary\"}\n                        disabled={props.isSubmitting}\n                      >\n                        Login\n                      </button>\n                    </form>\n                  )}\n                </Formik>\n\n                <div style={{ padding: \"15px 1px 15px 1px\" }}>\n                  <Link to=\"/auth/forgot\">Forgot Password ?</Link>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"3\"></Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Login;\n","export const userDetail = (actionType, actionData) => {\n  return {\n    type: actionType,\n    payload: actionData,\n  };\n};\n","import React from \"react\";\n\n// react-bootstrap components\nimport { Button, Card, Form, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post } from \"../../utils/api\";\nimport { DefaultInput } from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\n\nfunction Forgot() {\n  const forgetPassword = (values) => {\n    console.log(values)\n    let formData = {\n      email: values.email,\n    };\n    post(\"/auth/forgot-password\", formData).then((data) => handleSubmit(data));\n  };\n\n  const handleSubmit = (data) => {\n    ShowToast(data.message, data.status);\n    if (data.status) {\n      console.log(data);\n    }\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row className=\"auth\">\n          <Col md=\"3\"></Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h2\">Forgot Password</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Formik\n                  initialValues={{ email: \"\"}}\n                  validate={validateForgetPassword}\n                  onSubmit={(values, { setSubmitting }) => {\n                    forgetPassword(values);\n                    setSubmitting(false);\n                  }}\n                >\n                  {(props) => (\n                    <form onSubmit={props.handleSubmit}>\n                      <DefaultInput\n                        type={\"email\"}\n                        placeholder={\"Email\"}\n                        name={\"email\"}\n                        value={props.values.email}\n                        onChange={props.handleChange(\"email\")}\n                        onBlur={() => props.setFieldTouched(\"email\", true)}\n                        error={props.touched.email && props.errors.email}\n                      />\n\n                      <button\n                        type=\"submit\"\n                        className={\"btn btn-primary\"}\n                        disabled={props.isSubmitting}\n                      >\n                        Submit\n                      </button>\n                    </form>\n                  )}\n                </Formik>\n\n                <div style={{ padding: \"15px 1px 15px 1px\" }}>\n                  <Link to=\"/auth/login\">Go Back</Link>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"3\"></Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Forgot;\n","import React, { useEffect, useState } from \"react\";\n\n// react-bootstrap components\nimport { Button, Card, Form, Container, Row, Col } from \"react-bootstrap\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { post } from \"../../utils/api\";\nimport { DefaultInput } from \"../../components/Common/input\";\nimport { validateResetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nfunction Forgot() {\n  const params = useParams();\n  const history = useHistory();\n\n  const [paramsData, setparamsData] = useState({});\n\n  useEffect(() => {\n    let data = atob(params.id);\n    data = data.split(\":\");\n    setparamsData({ _id: data[0], otp: data[1] });\n    let formData = {\n      _id: data[0],\n      otp: data[1],\n    };\n    post(\"/auth/verifyOTP\", formData).then((data) => handleResponse(data));\n  }, []);\n\n  const handleResponse = (data) => {\n    if (!data.status) {\n      ShowToast(data.message, data.status);\n      history.push(\"/\");\n    }\n  };\n\n  const submit = (values) => {\n    let formData = {\n      _id: paramsData?._id,\n      password: values.password,\n    };\n    post(\"/auth/reset-password\", formData).then((data) => handleSubmit(data));\n  };\n\n  const handleSubmit = (data) => {\n    ShowToast(data.message, data.status);\n    history.push(\"/\");\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row className=\"auth\">\n          <Col md=\"3\"></Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h2\">Reset Password</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Formik\n                  initialValues={{ password: \"\", confirmPassword: \"\" }}\n                  validate={validateResetPassword}\n                  onSubmit={(values, { setSubmitting }) => {\n                    submit(values);\n                    setSubmitting(false);\n                  }}\n                >\n                  {(props) => (\n                    <form onSubmit={props.handleSubmit}>\n                      <DefaultInput\n                        type={\"password\"}\n                        placeholder={\"New Password\"}\n                        name={\"password\"}\n                        value={props.values.password}\n                        onChange={props.handleChange(\"password\")}\n                        onBlur={() => props.setFieldTouched(\"password\", true)}\n                        error={props.touched.password && props.errors.password}\n                      />\n\n                      <DefaultInput\n                        type={\"password\"}\n                        placeholder={\"Confirm New Password\"}\n                        name={\"cassword\"}\n                        value={props.values.confirmPassword}\n                        onChange={props.handleChange(\"confirmPassword\")}\n                        onBlur={() =>\n                          props.setFieldTouched(\"confirmPassword\", true)\n                        }\n                        error={\n                          props.touched.confirmPassword &&\n                          props.errors.confirmPassword\n                        }\n                      />\n\n                      <button\n                        type=\"submit\"\n                        className={\"btn btn-primary\"}\n                        disabled={props.isSubmitting}\n                      >\n                        Submit\n                      </button>\n                    </form>\n                  )}\n                </Formik>\n\n                <div style={{ padding: \"15px 1px 15px 1px\" }}>\n                  <Link to=\"/auth/login\">Go Back</Link>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"3\"></Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Forgot;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction User() {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Edit Profile</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form>\n                  <Row>\n                    <Col className=\"pr-1\" md=\"5\">\n                      <Form.Group>\n                        <label>Company (disabled)</label>\n                        <Form.Control\n                          defaultValue=\"Creative Code Inc.\"\n                          disabled\n                          placeholder=\"Company\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col className=\"px-1\" md=\"3\">\n                      <Form.Group>\n                        <label>Username</label>\n                        <Form.Control\n                          defaultValue=\"michael23\"\n                          placeholder=\"Username\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col className=\"pl-1\" md=\"4\">\n                      <Form.Group>\n                        <label htmlFor=\"exampleInputEmail1\">\n                          Email address\n                        </label>\n                        <Form.Control\n                          placeholder=\"Email\"\n                          type=\"email\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-1\" md=\"6\">\n                      <Form.Group>\n                        <label>First Name</label>\n                        <Form.Control\n                          defaultValue=\"Mike\"\n                          placeholder=\"Company\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col className=\"pl-1\" md=\"6\">\n                      <Form.Group>\n                        <label>Last Name</label>\n                        <Form.Control\n                          defaultValue=\"Andrew\"\n                          placeholder=\"Last Name\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <Form.Group>\n                        <label>Address</label>\n                        <Form.Control\n                          defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                          placeholder=\"Home Address\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-1\" md=\"4\">\n                      <Form.Group>\n                        <label>City</label>\n                        <Form.Control\n                          defaultValue=\"Mike\"\n                          placeholder=\"City\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col className=\"px-1\" md=\"4\">\n                      <Form.Group>\n                        <label>Country</label>\n                        <Form.Control\n                          defaultValue=\"Andrew\"\n                          placeholder=\"Country\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col className=\"pl-1\" md=\"4\">\n                      <Form.Group>\n                        <label>Postal Code</label>\n                        <Form.Control\n                          placeholder=\"ZIP Code\"\n                          type=\"number\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <Form.Group>\n                        <label>About Me</label>\n                        <Form.Control\n                          cols=\"80\"\n                          defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                          that two seat Lambo.\"\n                          placeholder=\"Here can be your description\"\n                          rows=\"4\"\n                          as=\"textarea\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Button\n                    className=\"btn-fill pull-right\"\n                    type=\"submit\"\n                    variant=\"info\"\n                  >\n                    Update Profile\n                  </Button>\n                  <div className=\"clearfix\"></div>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"card-user\">\n              <div className=\"card-image\">\n                <img\n                  alt=\"...\"\n                  src={\n                    require(\"assets/img/photo-1431578500526-4d9613015464.jpeg\")\n                      .default\n                  }\n                ></img>\n              </div>\n              <Card.Body>\n                <div className=\"author\">\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                    <img\n                      alt=\"...\"\n                      className=\"avatar border-gray\"\n                      src={require(\"assets/img/faces/face-3.jpg\").default}\n                    ></img>\n                    <h5 className=\"title\">Mike Andrew</h5>\n                  </a>\n                  <p className=\"description\">michael24</p>\n                </div>\n                <p className=\"description text-center\">\n                  \"Lamborghini Mercy <br></br>\n                  Your chick she so thirsty <br></br>\n                  I'm in that two seat Lambo\"\n                </p>\n              </Card.Body>\n              <hr></hr>\n              <div className=\"button-container mr-auto ml-auto\">\n                <Button\n                  className=\"btn-simple btn-icon\"\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                  variant=\"link\"\n                >\n                  <i className=\"fab fa-facebook-square\"></i>\n                </Button>\n                <Button\n                  className=\"btn-simple btn-icon\"\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                  variant=\"link\"\n                >\n                  <i className=\"fab fa-twitter\"></i>\n                </Button>\n                <Button\n                  className=\"btn-simple btn-icon\"\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                  variant=\"link\"\n                >\n                  <i className=\"fab fa-google-plus-square\"></i>\n                </Button>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default User;\n","import React from \"react\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n  Form,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nfunction ComingSoon() {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"strpied-tabled-with-hover\">\n              <Card.Header>\n                <Card.Title as=\"h4\"></Card.Title>\n              </Card.Header>\n              <Card.Body className=\"table-full-width table-responsive px-0\">\n                <Row>\n                  <Col md=\"4\"></Col>\n                  <Col md=\"4\">\n                    <h1>Coming Soon</h1>\n                  </Col>\n                  <Col md=\"4\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default ComingSoon;\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get, deleteApi } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\n\nexport default function TechnologyList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/technology/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(\n        `${status ? \"/technology/inactive\" : \"/technology/active\"}`,\n        formData\n      ).then((data) => {\n        handleStatusChange(data);\n      });\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      deleteApi(`/technology/delete?_id=${id}`).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Technology</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link\n                      className=\"btn btn-primary\"\n                      to=\"/admin/technology/add\"\n                    >\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Name (EN)</th>\n                      <th>Name (DE)</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.nameEN}</td>\n                          <td>{ele?.nameDE}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`technology/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateTechnology } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function TechnologyAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n  }, []);\n\n  const getSingle = () => {\n    if(id)\n    get(`/technology/getSingle?_id=${id}`).then((data) =>\n      handleSingleData(data)\n    );\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"nameEN\", data?.data?.nameEN);\n    formRef.current.setFieldValue(\"nameDE\", data?.data?.nameDE);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      nameEN: values.nameEN,\n      nameDE: values.nameDE,\n    };\n    if (id)\n      put(`${`/technology/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/technology/insert\"}`, formData).then((data) =>\n        handleResponse(data)\n      );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if(!id) history.goBack()\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Technology ${id ? 'Edit' : 'Add'}`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{ nameEN: \"\", nameDE: \"\" }}\n                      validate={validateTechnology}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Name (EN)\"}\n                            name={\"name (EN)\"}\n                            id={\"nameEN\"}\n                            value={props.values.nameEN}\n                            onChange={props.handleChange(\"nameEN\")}\n                            onBlur={() => props.setFieldTouched(\"nameEN\", true)}\n                            error={props.touched.nameEN && props.errors.nameEN}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Name (DE)\"}\n                            name={\"name (DE)\"}\n                            id={\"nameDE\"}\n                            value={props.values.nameDE}\n                            onChange={props.handleChange(\"nameDE\")}\n                            onBlur={() => props.setFieldTouched(\"nameDE\", true)}\n                            error={props.touched.nameDE && props.errors.nameDE}\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n  Image,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\n\nexport default function ExpertList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n  const [imageUrl, setimageUrl] = useState(\"\");\n  const [searchItem, setsearchItem] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/expert/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n      setimageUrl(data?.imageUrl);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${status ? \"/expert/inactive\" : \"/expert/active\"}`, formData).then(\n        (data) => {\n          handleStatusChange(data);\n        }\n      );\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${\"/expert/delete\"}`, formData).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Expert</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/expert/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Image</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      {/* <th>Mobile</th> */}\n                      <th>Experience</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>\n                            {ele?.image && (\n                              <Image\n                                src={`${imageUrl}${ele?.image}`}\n                                roundedCircle\n                                style={{\n                                  maxHeight: \"50px\",\n                                  maxWidth: \"50px\",\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                }}\n                              />\n                            )}\n                          </td>\n                          <td>{ele?.fName} {ele?.lName}</td>\n                          <td>{ele?.email}</td>\n                          {/* <td>{ele?.mobile}</td> */}\n                          <td>\n                            {ele?.experience ? `${ele?.experience} Years` : \"-\"}\n                          </td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`expert/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n  Image,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultMobileInput,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateExpert } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function ExpertAdd(props) {\n  const history = useHistory();\n\n  const [experience, setExperience] = useState([]);\n  const [technology, setTechnology] = useState([]);\n  const [imageUrl, setimageUrl] = useState(\"\");\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n  const fileRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n    generateExperience();\n    getTechnology();\n  }, []);\n\n  const generateExperience = () => {\n    let array = [];\n    for (let index = 1; index <= 10; index++) {\n      array.push({\n        label: `${index} Years`,\n        value: String(index),\n      });\n    }\n    setExperience(array);\n  };\n\n  const getTechnology = () => {\n    get(`/technology/getAll`).then((data) => handleTechnology(data));\n  };\n\n  const handleTechnology = (data) => {\n    if (data.status && Array.isArray(data?.data)) {\n      let temp = data?.data.map((ele) => {\n        return { value: ele._id, label: ele.nameEN };\n      });\n      setTechnology(temp);\n    }\n  };\n\n  const getSingle = () => {\n    if (id)\n      get(`/expert/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    setimageUrl(data?.imageUrl);\n    formRef.current.setFieldValue(\"fName\", data?.data?.fName);\n    formRef.current.setFieldValue(\"lName\", data?.data?.lName);\n    formRef.current.setFieldValue(\"email\", data?.data?.email);\n    formRef.current.setFieldValue(\"mobile\", data?.data?.mobile);\n    formRef.current.setFieldValue(\"experience\", data?.data?.experience);\n    formRef.current.setFieldValue(\"technology\", data?.data?.technology);\n    formRef.current.setFieldValue(\"image\", data?.data?.image);\n  };\n\n  const submit = (values) => {\n    let formData = new FormData();\n    for (var ele in values) {\n      formData.append(ele, values[ele]);\n    }\n    if (id)\n      put(`${`/expert/update?_id=${id}`}`, formData, 1).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/expert/insert\"}`, formData, 1).then((data) =>\n        handleResponse(data)\n      );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id && data.status) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Expert ${\n                  id ? \"Edit\" : \"Add\"\n                }`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        fName: \"\",\n                        lName: \"\",\n                        email: \"\",\n                        // mobile: \"\",\n                        experience: \"\",\n                        technology: [],\n                        password: \"\",\n                        confirmPassword: \"\",\n                      }}\n                      validate={(values) => validateExpert(values, id)}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"First Name\"}\n                            name={\"fName\"}\n                            id={\"fName\"}\n                            maxLength={50}\n                            value={props.values.fName}\n                            onChange={props.handleChange(\"fName\")}\n                            onBlur={() => props.setFieldTouched(\"fName\", true)}\n                            error={props.touched.fName && props.errors.fName}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Last Name\"}\n                            name={\"lName\"}\n                            id={\"lName\"}\n                            maxLength={50}\n                            value={props.values.lName}\n                            onChange={props.handleChange(\"lName\")}\n                            onBlur={() => props.setFieldTouched(\"lName\", true)}\n                            error={props.touched.lName && props.errors.lName}\n                          />\n\n                          <DefaultInput\n                            type={\"email\"}\n                            placeholder={\"Email\"}\n                            name={\"email\"}\n                            id={\"email\"}\n                            maxLength={50}\n                            value={props.values.email}\n                            onChange={props.handleChange(\"email\")}\n                            onBlur={() => props.setFieldTouched(\"email\", true)}\n                            error={props.touched.email && props.errors.email}\n                          />\n\n                          <DefaultInput\n                            type={\"file\"}\n                            placeholder={\"Image\"}\n                            name={\"image\"}\n                            accept=\"image/*\"\n                            // value={props.values.image}\n                            refr={fileRef}\n                            onChange={(e) => {\n                              props.setFieldValue(\"image\", e.target.files[0]);\n                            }}\n                            onBlur={() => props.setFieldTouched(\"image\", true)}\n                            error={props.touched.image && props.errors.image}\n                          />\n\n                          {props.values.image && (\n                            <Image\n                              src={`${imageUrl}${props.values.image}`}\n                              roundedCircle\n                              style={{\n                                maxHeight: \"90px\",\n                                maxWidth: \"90px\",\n                                borderRadius: 50,\n                                alignItems: \"center\",\n                                marginTop: \"10px\",\n                                marginBottom: \"10px\",\n                              }}\n                            />\n                          )}\n\n                          {/* <DefaultMobileInput\n                            type={\"text\"}\n                            placeholder={\"Mobile\"}\n                            name={\"mobile\"}\n                            id={\"mobile\"}\n                            maxLength={13}\n                            value={props.values.mobile}\n                            onChange={(val) =>\n                              props.setFieldValue(\"mobile\", val || \"\")\n                            }\n                            onBlur={() => props.setFieldTouched(\"mobile\", true)}\n                            error={props.touched.mobile && props.errors.mobile}\n                          /> */}\n\n                          <DefaultSelect\n                            data={experience}\n                            placeholder={\"Select Experience\"}\n                            name={\"experience\"}\n                            value={props.values.experience}\n                            onChange={props.handleChange(\"experience\")}\n                            id={\"experience\"}\n                            onBlur={() =>\n                              props.setFieldTouched(\"experience\", true)\n                            }\n                            error={\n                              props.touched.experience &&\n                              props.errors.experience\n                            }\n                          />\n\n                          <DefaultSelect\n                            data={technology}\n                            multiple={true}\n                            placeholder={\"Select Technology\"}\n                            name={\"technology\"}\n                            value={props.values.technology}\n                            onChange={props.handleChange(\"technology\")}\n                            id={\"technology\"}\n                            onBlur={() =>\n                              props.setFieldTouched(\"technology\", true)\n                            }\n                            error={\n                              props.touched.technology &&\n                              props.errors.technology\n                            }\n                          />\n\n                          {!id ? (\n                            <>\n                              <DefaultInput\n                                type={\"password\"}\n                                placeholder={\"Password\"}\n                                name={\"Password\"}\n                                id={\"password\"}\n                                value={props.values.password}\n                                onChange={props.handleChange(\"password\")}\n                                onBlur={() =>\n                                  props.setFieldTouched(\"password\", true)\n                                }\n                                error={\n                                  props.touched.password &&\n                                  props.errors.password\n                                }\n                              />\n\n                              <DefaultInput\n                                type={\"password\"}\n                                placeholder={\"Password\"}\n                                name={\"Confirm Password\"}\n                                id={\"confirmPassword\"}\n                                value={props.values.confirmPassword}\n                                onChange={props.handleChange(\"confirmPassword\")}\n                                onBlur={() =>\n                                  props.setFieldTouched(\"confirmPassword\", true)\n                                }\n                                error={\n                                  props.touched.confirmPassword &&\n                                  props.errors.confirmPassword\n                                }\n                              />\n                            </>\n                          ) : null}\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n  Image,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\n\nexport default function ExpertList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n  const [imageUrl, setimageUrl] = useState(\"\");\n  const [searchItem, setsearchItem] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/customer/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n      setimageUrl(data?.imageUrl);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${status ? \"/customer/inactive\" : \"/customer/active\"}`, formData).then(\n        (data) => {\n          handleStatusChange(data);\n        }\n      );\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${\"/customer/delete\"}`, formData).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Customer</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/customer/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Image</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      {/* <th>Mobile</th> */}\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>\n                            {ele?.image && (\n                              <Image\n                                src={`${imageUrl}${ele?.image}`}\n                                roundedCircle\n                                style={{\n                                  maxHeight: \"50px\",\n                                  maxWidth: \"50px\",\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                }}\n                              />\n                            )}\n                          </td>\n                          <td>{ele?.fName} {ele?.lName}</td>\n                          <td>{ele?.email}</td>\n                          {/* <td>{ele?.mobile}</td> */}\n                        \n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`customer/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n  Image,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultMobileInput,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateCustomer, validateExpert } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function ExpertAdd(props) {\n  const history = useHistory();\n\n  const [experience, setExperience] = useState([]);\n  const [technology, setTechnology] = useState([]);\n  const [imageUrl, setimageUrl] = useState(\"\");\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n  const fileRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n    generateExperience();\n    getTechnology();\n  }, []);\n\n  const generateExperience = () => {\n    let array = [];\n    for (let index = 1; index <= 10; index++) {\n      array.push({\n        label: `${index} Years`,\n        value: String(index),\n      });\n    }\n    setExperience(array);\n  };\n\n  const getTechnology = () => {\n    get(`/technology/getAll`).then((data) => handleTechnology(data));\n  };\n\n  const handleTechnology = (data) => {\n    if (data.status && Array.isArray(data?.data)) {\n      let temp = data?.data.map((ele) => {\n        return { value: ele._id, label: ele.nameEN };\n      });\n      setTechnology(temp);\n    }\n  };\n\n  const getSingle = () => {\n    if (id)\n      get(`/customer/getSingle?_id=${id}`).then((data) =>\n        handleSingleData(data)\n      );\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    setimageUrl(data?.imageUrl);\n    formRef.current.setFieldValue(\"fName\", data?.data?.fName);\n    formRef.current.setFieldValue(\"lName\", data?.data?.lName);\n    formRef.current.setFieldValue(\"email\", data?.data?.email);\n    formRef.current.setFieldValue(\"mobile\", data?.data?.mobile);\n    formRef.current.setFieldValue(\"experience\", data?.data?.experience);\n    formRef.current.setFieldValue(\"technology\", data?.data?.technology);\n    formRef.current.setFieldValue(\"image\", data?.data?.image);\n  };\n\n  const submit = (values) => {\n    let formData = new FormData();\n    for (var ele in values) {\n      formData.append(ele, values[ele]);\n    }\n    if (id)\n      put(`${`/customer/update?_id=${id}`}`, formData, 1).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/customer/insert\"}`, formData, 1).then((data) =>\n        handleResponse(data)\n      );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id && data.status) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Customer ${\n                  id ? \"Edit\" : \"Add\"\n                }`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        fName: \"\",\n                        lName: \"\",\n                        email: \"\",\n                        image: \"\",\n                        experience: \"\",\n                        technology: [],\n                        password: \"\",\n                        confirmPassword: \"\",\n                      }}\n                      validate={(values) => validateCustomer(values, id)}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"First Name\"}\n                            name={\"fName\"}\n                            id={\"fName\"}\n                            maxLength={50}\n                            value={props.values.fName}\n                            onChange={props.handleChange(\"fName\")}\n                            onBlur={() => props.setFieldTouched(\"fName\", true)}\n                            error={props.touched.fName && props.errors.fName}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Last Name\"}\n                            name={\"lName\"}\n                            id={\"lName\"}\n                            maxLength={50}\n                            value={props.values.lName}\n                            onChange={props.handleChange(\"lName\")}\n                            onBlur={() => props.setFieldTouched(\"lName\", true)}\n                            error={props.touched.lName && props.errors.lName}\n                          />\n\n                          <DefaultInput\n                            type={\"email\"}\n                            placeholder={\"Email\"}\n                            name={\"email\"}\n                            id={\"email\"}\n                            maxLength={50}\n                            value={props.values.email}\n                            onChange={props.handleChange(\"email\")}\n                            onBlur={() => props.setFieldTouched(\"email\", true)}\n                            error={props.touched.email && props.errors.email}\n                          />\n\n                          <DefaultInput\n                            type={\"file\"}\n                            placeholder={\"Image\"}\n                            name={\"image\"}\n                            // value={props.values.image}\n                            accept=\"image/*\"\n                            refr={fileRef}\n                            onChange={(e) => {\n                              props.setFieldValue(\"image\", e.target.files[0]);\n                            }}\n                            onBlur={() => props.setFieldTouched(\"image\", true)}\n                            error={props.touched.image && props.errors.image}\n                          />\n\n                          {props.values.image && (\n                            <Image\n                              src={`${imageUrl}${props.values.image}`}\n                              roundedCircle\n                              style={{\n                                maxHeight: \"90px\",\n                                maxWidth: \"90px\",\n                                borderRadius: 50,\n                                alignItems: \"center\",\n                                marginTop: \"10px\",\n                                marginBottom: \"10px\",\n                              }}\n                            />\n                          )}\n\n                          {/* <DefaultMobileInput\n                            type={\"text\"}\n                            placeholder={\"Mobile\"}\n                            name={\"mobile\"}\n                            id={\"mobile\"}\n                            maxLength={13}\n                            value={props.values.mobile}\n                            onChange={(val) =>\n                              props.setFieldValue(\"mobile\", val || \"\")\n                            }\n                            onBlur={() => props.setFieldTouched(\"mobile\", true)}\n                            error={props.touched.mobile && props.errors.mobile}\n                          /> */}\n\n                          {/* <DefaultSelect\n                            data={experience}\n                            placeholder={\"Select Experience\"}\n                            name={\"experience\"}\n                            value={props.values.experience}\n                            onChange={props.handleChange(\"experience\")}\n                            id={\"experience\"}\n                            onBlur={() =>\n                              props.setFieldTouched(\"experience\", true)\n                            }\n                            error={\n                              props.touched.experience &&\n                              props.errors.experience\n                            }\n                          /> */}\n\n                          {/* <DefaultSelect\n                            data={technology}\n                            multiple={true}\n                            placeholder={\"Select Technology\"}\n                            name={\"technology\"}\n                            value={props.values.technology}\n                            onChange={props.handleChange(\"technology\")}\n                            id={\"technology\"}\n                            onBlur={() =>\n                              props.setFieldTouched(\"technology\", true)\n                            }\n                            error={\n                              props.touched.technology &&\n                              props.errors.technology\n                            }\n                          /> */}\n\n                          {!id ? (\n                            <>\n                              <DefaultInput\n                                type={\"password\"}\n                                placeholder={\"Password\"}\n                                name={\"Password\"}\n                                id={\"password\"}\n                                value={props.values.password}\n                                onChange={props.handleChange(\"password\")}\n                                onBlur={() =>\n                                  props.setFieldTouched(\"password\", true)\n                                }\n                                error={\n                                  props.touched.password &&\n                                  props.errors.password\n                                }\n                              />\n\n                              <DefaultInput\n                                type={\"password\"}\n                                placeholder={\"Password\"}\n                                name={\"Confirm Password\"}\n                                id={\"confirmPassword\"}\n                                value={props.values.confirmPassword}\n                                onChange={props.handleChange(\"confirmPassword\")}\n                                onBlur={() =>\n                                  props.setFieldTouched(\"confirmPassword\", true)\n                                }\n                                error={\n                                  props.touched.confirmPassword &&\n                                  props.errors.confirmPassword\n                                }\n                              />\n                            </>\n                          ) : null}\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function TechnologyList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/template/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(\n        `${status ? \"/template/inactive\" : \"/template/active\"}`,\n        formData\n      ).then((data) => {\n        handleStatusChange(data);\n      });\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${\"/template/delete\"}`, formData).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Template</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/template/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Title</th>\n                      <th>Slug</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.title}</td>\n                          <td>{ele?.slug}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`template/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateEmail, validateTemplate } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function TechnologyAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n  }, []);\n\n  const getSingle = () => {\n    if (id)\n      get(`/template/getSingle?_id=${id}`).then((data) =>\n        handleSingleData(data)\n      );\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"title\", data?.data?.title);\n    formRef.current.setFieldValue(\"slug\", data?.data?.slug);\n    formRef.current.setFieldValue(\"content\", data?.data?.content);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      title: values.title,\n      slug: values.slug,\n      content: values.content,\n    };\n    if (id)\n      put(`${`/template/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/template/insert\"}`, formData).then((data) =>\n        handleResponse(data)\n      );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Template ${\n                  id ? \"Edit\" : \"Add\"\n                }`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{ title: \"\", slug: \"\", content: \"\" }}\n                      validate={validateEmail}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title\"}\n                            name={\"title\"}\n                            value={props.values.title}\n                            onChange={props.handleChange(\"title\")}\n                            onBlur={() => props.setFieldTouched(\"title\", true)}\n                            error={props.touched.title && props.errors.title}\n                          />\n\n                          <DefaultInput\n                            type={\"slug\"}\n                            placeholder={\"Slug\"}\n                            name={\"slug\"}\n                            value={props.values.slug}\n                            onChange={props.handleChange(\"slug\")}\n                            onBlur={() => props.setFieldTouched(\"slug\", true)}\n                            error={props.touched.slug && props.errors.slug}\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Content\"}\n                            name={\"content\"}\n                            value={props.values.content}\n                            onChange={val=> props.setFieldValue('content',val)}\n                            onBlur={() =>\n                              props.setFieldTouched(\"content\", true)\n                            }\n                            error={\n                              props.touched.content && props.errors.content\n                            }\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get, deleteApi } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function CmsList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/cms/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(\n        `${status ? \"/cms/inactive\" : \"/cms/active\"}`,\n        formData\n      ).then((data) => {\n        handleStatusChange(data);\n      });\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      deleteApi(`/cms/delete?_id=${id}`).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">CMS</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/cms/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Title (En)</th>\n                      <th>Title (De)</th>\n                      <th>Slug</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.titleEN}</td>\n                          <td>{ele?.titleDE}</td>\n                          <td>{ele?.slug}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`cms/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateTemplate } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function CmsAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n  }, []);\n\n  const getSingle = () => {\n    if (id)\n      get(`/cms/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"titleEN\", data?.data?.titleEN);\n    formRef.current.setFieldValue(\"titleDE\", data?.data?.titleDE);\n    formRef.current.setFieldValue(\"slug\", data?.data?.slug);\n    formRef.current.setFieldValue(\"contentEN\", data?.data?.contentEN);\n    formRef.current.setFieldValue(\"contentDE\", data?.data?.contentDE);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      titleEN: values.titleEN,\n      titleDE: values.titleDE,\n      slug: values.slug,\n      contentEN: values.contentEN,\n      contentDE: values.contentDE,\n    };\n    if (id)\n      put(`${`/cms/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/cms/insert\"}`, formData).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Template ${\n                  id ? \"Edit\" : \"Add\"\n                }`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        titleEN: \"\",\n                        titleDE: \"\",\n                        slug: \"\",\n                        contentEN: \"\",\n                        contentDE: \"\",\n                      }}\n                      validate={validateTemplate}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title (En)\"}\n                            name={\"title\"}\n                            value={props.values.titleEN}\n                            onChange={props.handleChange(\"titleEN\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"titleEN\", true)\n                            }\n                            error={\n                              props.touched.titleEN && props.errors.titleEN\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title (De)\"}\n                            name={\"title\"}\n                            value={props.values.titleDE}\n                            onChange={props.handleChange(\"titleDE\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"titleDE\", true)\n                            }\n                            error={\n                              props.touched.titleDE && props.errors.titleDE\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"slug\"}\n                            placeholder={\"Slug\"}\n                            name={\"slug\"}\n                            value={props.values.slug}\n                            onChange={props.handleChange(\"slug\")}\n                            onBlur={() => props.setFieldTouched(\"slug\", true)}\n                            error={props.touched.slug && props.errors.slug}\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Content (En)\"}\n                            name={\"content\"}\n                            value={props.values.contentEN}\n                            onChange={(val) =>\n                              props.setFieldValue(\"contentEN\", val)\n                            }\n                            onBlur={() =>\n                              props.setFieldTouched(\"contentEN\", true)\n                            }\n                            error={\n                              props.touched.contentEN && props.errors.contentEN\n                            }\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Content (De)\"}\n                            name={\"content\"}\n                            value={props.values.contentDE}\n                            onChange={(val) =>\n                              props.setFieldValue(\"contentDE\", val)\n                            }\n                            onBlur={() =>\n                              props.setFieldTouched(\"contentDE\", true)\n                            }\n                            error={\n                              props.touched.contentDE && props.errors.contentDE\n                            }\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get, deleteApi } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function FaqList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/faq/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(\n        `${status ? \"/faq/inactive\" : \"/faq/active\"}`,\n        formData\n      ).then((data) => {\n        handleStatusChange(data);\n      });\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      deleteApi(`/faq/delete?_id=${id}`).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">FAQ</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/faq/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Question</th>\n                      <th>Answer</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.question}</td>\n                          <td>{ele?.answer}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`faq/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateFaq, validateTemplate } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function FaqAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n  }, []);\n\n  const getSingle = () => {\n    if (id)\n      get(`/faq/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"question\", data?.data?.question);\n    formRef.current.setFieldValue(\"answer\", data?.data?.answer);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      question: values.question,\n      answer: values.answer,\n    };\n    if (id)\n      put(`${`/faq/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/faq/insert\"}`, formData).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`FAQ ${id ? \"Edit\" : \"Add\"}`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{ question: \"\", answer: \"\" }}\n                      validate={validateFaq}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Question\"}\n                            name={\"question\"}\n                            value={props.values.question}\n                            onChange={props.handleChange(\"question\")}\n                            onBlur={() => props.setFieldTouched(\"question\", true)}\n                            error={props.touched.question && props.errors.question}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"answer\"}\n                            name={\"answer\"}\n                            value={props.values.answer}\n                            onChange={props.handleChange(\"answer\")}\n                            onBlur={() => props.setFieldTouched(\"answer\", true)}\n                            error={props.touched.answer && props.errors.answer}\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateAttack, validateTemplate } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Country from \"../../constants/country.json\";\n\nexport default function AttackAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n    console.log(Country);\n  }, []);\n\n  const getSingle = () => {\n    if (id)\n      get(`/attack/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"titleEN\", data?.data?.titleEN);\n    formRef.current.setFieldValue(\"country\", data?.data?.country);\n    formRef.current.setFieldValue(\"titleDE\", data?.data?.titleDE);\n    formRef.current.setFieldValue(\"descriptionEN\", data?.data?.descriptionEN);\n    formRef.current.setFieldValue(\"descriptionDE\", data?.data?.descriptionDE);\n    // formRef.current.setFieldValue(\"link\", data?.data?.link);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      country: values.country,\n      titleEN: values.titleEN,\n      titleDE: values.titleDE,\n      descriptionEN: values.descriptionEN,\n      descriptionDE: values.descriptionDE,\n    };\n    if (id)\n      put(`${`/attack/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/attack/insert\"}`, formData).then((data) =>\n        handleResponse(data)\n      );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Attack ${\n                  id ? \"Edit\" : \"Add\"\n                }`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        country: \"\",\n                        titleEN: \"\",\n                        titleDE: \"\",\n                        descriptionEN: \"\",\n                        descriptionDE: \"\",\n                      }}\n                      validate={validateAttack}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultSelect\n                            data={Country}\n                            type={\"country\"}\n                            placeholder={\"Select Country\"}\n                            name={\"experience\"}\n                            value={props.values.country}\n                            onChange={props.handleChange(\"country\")}\n                            id={\"country\"}\n                            onBlur={() =>\n                              props.setFieldTouched(\"country\", true)\n                            }\n                            error={\n                              props.touched.country &&\n                              props.errors.country\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title (En)\"}\n                            name={\"title\"}\n                            value={props.values.titleEN}\n                            onChange={props.handleChange(\"titleEN\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"titleEN\", true)\n                            }\n                            error={\n                              props.touched.titleEN && props.errors.titleEN\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title (Gr)\"}\n                            name={\"title\"}\n                            value={props.values.titleDE}\n                            onChange={props.handleChange(\"titleDE\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"titleDE\", true)\n                            }\n                            error={\n                              props.touched.titleDE && props.errors.titleDE\n                            }\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Description (En)\"}\n                            name={\"descriptionEN\"}\n                            value={props.values.descriptionEN}\n                            onChange={(val) =>\n                              props.setFieldValue(\"descriptionEN\", val)\n                            }\n                            onBlur={() =>\n                              props.setFieldTouched(\"descriptionEN\", true)\n                            }\n                            error={\n                              props.touched.descriptionEN &&\n                              props.errors.descriptionEN\n                            }\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Description (Gr)\"}\n                            name={\"descriptionDE\"}\n                            value={props.values.descriptionDE}\n                            onChange={(val) =>\n                              props.setFieldValue(\"descriptionDE\", val)\n                            }\n                            onBlur={() =>\n                              props.setFieldTouched(\"descriptionDE\", true)\n                            }\n                            error={\n                              props.touched.descriptionDE &&\n                              props.errors.descriptionDE\n                            }\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get, deleteApi } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function LawList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/law/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${status ? \"/law/inactive\" : \"/law/active\"}`, formData).then(\n        (data) => {\n          handleStatusChange(data);\n        }\n      );\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      deleteApi(`/law/delete?_id=${id}`).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">law</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/law/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Country</th>\n                      <th>Title (En)</th>\n                      <th>Title (Gr)</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.country}</td>\n                          <td>{ele?.titleEN}</td>\n                          <td>{ele?.titleDE}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`law/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateAttack, validateTemplate } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Country from \"../../constants/country.json\";\n\nexport default function LawAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n    console.log(Country);\n  }, []);\n\n  const getSingle = () => {\n    if (id)\n      get(`/law/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"titleEN\", data?.data?.titleEN);\n    formRef.current.setFieldValue(\"country\", data?.data?.country);\n    formRef.current.setFieldValue(\"titleDE\", data?.data?.titleDE);\n    formRef.current.setFieldValue(\"descriptionEN\", data?.data?.descriptionEN);\n    formRef.current.setFieldValue(\"descriptionDE\", data?.data?.descriptionDE);\n    // formRef.current.setFieldValue(\"link\", data?.data?.link);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      country: values.country,\n      titleEN: values.titleEN,\n      titleDE: values.titleDE,\n      descriptionEN: values.descriptionEN,\n      descriptionDE: values.descriptionDE,\n    };\n    if (id)\n      put(`${`/law/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/law/insert\"}`, formData).then((data) =>\n        handleResponse(data)\n      );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Attack ${\n                  id ? \"Edit\" : \"Add\"\n                }`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        country: \"\",\n                        titleEN: \"\",\n                        titleDE: \"\",\n                        descriptionEN: \"\",\n                        descriptionDE: \"\",\n                      }}\n                      validate={validateAttack}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultSelect\n                            data={Country}\n                            type={\"country\"}\n                            placeholder={\"Select Country\"}\n                            name={\"experience\"}\n                            value={props.values.country}\n                            onChange={props.handleChange(\"country\")}\n                            id={\"country\"}\n                            onBlur={() =>\n                              props.setFieldTouched(\"country\", true)\n                            }\n                            error={\n                              props.touched.country &&\n                              props.errors.country\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title (En)\"}\n                            name={\"title\"}\n                            value={props.values.titleEN}\n                            onChange={props.handleChange(\"titleEN\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"titleEN\", true)\n                            }\n                            error={\n                              props.touched.titleEN && props.errors.titleEN\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"title\"}\n                            placeholder={\"Title (Gr)\"}\n                            name={\"title\"}\n                            value={props.values.titleDE}\n                            onChange={props.handleChange(\"titleDE\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"titleDE\", true)\n                            }\n                            error={\n                              props.touched.titleDE && props.errors.titleDE\n                            }\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Description (En)\"}\n                            name={\"descriptionEN\"}\n                            value={props.values.descriptionEN}\n                            onChange={(val) =>\n                              props.setFieldValue(\"descriptionEN\", val)\n                            }\n                            onBlur={() =>\n                              props.setFieldTouched(\"descriptionEN\", true)\n                            }\n                            error={\n                              props.touched.descriptionEN &&\n                              props.errors.descriptionEN\n                            }\n                          />\n\n                          <DefaultEditor\n                            type={\"content\"}\n                            placeholder={\"Description (Gr)\"}\n                            name={\"descriptionDE\"}\n                            value={props.values.descriptionDE}\n                            onChange={(val) =>\n                              props.setFieldValue(\"descriptionDE\", val)\n                            }\n                            onBlur={() =>\n                              props.setFieldTouched(\"descriptionDE\", true)\n                            }\n                            error={\n                              props.touched.descriptionDE &&\n                              props.errors.descriptionDE\n                            }\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n  Badge,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function QuestList(props) {\n  const filterData = [\n    { label: \"All\", value: 1 },\n    { label: \"Solved\", value: 2 },\n    { label: \"Un-Solved\", value: 3 },\n    { label: \"Scheduled\", value: 4 },\n  ];\n\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n    type: 1,\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/quest/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}&type=${pageData.type}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${status ? \"/quest/inactive\" : \"/quest/active\"}`, formData).then(\n        (data) => {\n          handleStatusChange(data);\n        }\n      );\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${\"/quest/delete\"}`, formData).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Quest</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\">\n                    <DefaultSelect\n                      hideLable={true}\n                      data={filterData}\n                      placeholder={\"Select Type\"}\n                      name={\"type\"}\n                      value={pageData.type}\n                      onChange={(val) =>\n                        setpageData({ ...pageData, type: val.target.value })\n                      }\n                    />\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Id</th>\n                      <th>Title</th>\n                      <th>Type</th>\n                      <th>Customer Name</th>\n                      <th>Expert Name</th>\n                      <th>Answer Status</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.displayId}</td>\n                          <td>{ele?.title}</td>\n                          <td>\n                            {ele?.questType == 1 ? \"Priority\" : \"Standerd\"}\n                          </td>\n                          <td>\n                            {ele?.customerId?.fName} {ele?.customerId?.lName}\n                          </td>\n                          <td>\n                            {ele?.expertId?.fName\n                              ? ele?.expertId?.fName\n                              : \"Unassigned\"}{\" \"}\n                            {ele?.expertId?.lName}\n                          </td>\n                          <td>\n                            {ele?.isComplete ? (\n                              <span className=\"\">\n                                <Badge variant=\"primary\">Answered</Badge>\n                              </span>\n                            ) : (\n                              <span className=\"\">\n                                <Badge variant=\"warning\">Not-Answered</Badge>\n                              </span>\n                            )}\n                          </td>\n\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`quests/edit/${ele?._id}`}\n                              >\n                                View\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Image,\n  Table,\n  Pagination,\n  Badge,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultSelect,\n  DefaultTextarea,\n} from \"../../components/Common/input\";\nimport { Formik } from \"formik\";\nimport { DefaultDocument, ShowToast } from \"../../components/Common/common\";\nimport Country from \"../../constants/country.json\";\nimport moment from \"moment\";\n\nexport default function QuestAdd(props) {\n  const history = useHistory();\n  const [questData, setQuestData] = useState();\n  const [imageUrl, setimageUrl] = useState();\n  const [expertData, setexpertData] = useState([]);\n  const [threadData, setthreadData] = useState([]);\n  const [imageArray, setimageArray] = useState([]);\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n    getAllExpert();\n  }, []);\n\n  const getAllExpert = () => {\n    get(`/expert/getAll`).then((data) => handleExpert(data));\n  };\n\n  const handleExpert = (data) => {\n    if (data.data) {\n      let temp = data.data.map((ele, index) => {\n        return { label: ele.fName + \" \" + ele.lName, value: ele._id };\n      });\n      setexpertData(temp);\n    }\n  };\n\n  const getSingle = () => {\n    if (id)\n      get(`/quest/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    setQuestData(data?.data);\n    setimageUrl(data?.imageUrl);\n    setthreadData(data?.threads);\n    formRef.current.setFieldValue(\"title\", data?.data?.title);\n    formRef.current.setFieldValue(\"description\", data?.data?.description);\n    formRef.current.setFieldValue(\"displayId\", data?.data?.displayId);\n    formRef.current.setFieldValue(\n      \"isLiveSession\",\n      data?.data?.isLiveSession ? \"YES\" : \"NO\"\n    );\n    formRef.current.setFieldValue(\n      \"liveSession\",\n      data?.data?.isLiveSession\n        ? moment(data?.data?.liveSession).format(\"MMMM-DD-yyyy h:mm a\")\n        : \"-\"\n    );\n    formRef.current.setFieldValue(\n      \"questType\",\n      data?.data?.questType == 1 ? \"Priority\" : \"Standard\"\n    );\n    formRef.current.setFieldValue(\"documents\", data?.data?.documents);\n    formRef.current.setFieldValue(\n      \"customerName\",\n      data?.data?.customerId.fName + \" \" + data?.data?.customerId.lName\n    );\n    formRef.current.setFieldValue(\n      \"customerEmail\",\n      data?.data?.customerId.email\n    );\n    formRef.current.setFieldValue(\n      \"expertId\",\n      data?.data?.expertId?._id ? data?.data?.expertId?._id : null\n    );\n    formRef.current.setFieldValue(\n      \"expertEmail\",\n      data?.data?.expertId?.email ? data?.data?.expertId.email : \"-\"\n    );\n  };\n\n  const assign = () => {\n    if (formRef.current.values.expertId) {\n      let formData = {\n        questId: questData?._id,\n        expertId: formRef.current.values.expertId,\n      };\n      post(\"/quest/assignExpert\", formData).then((data) =>\n        handleAssignResponse(data)\n      );\n    } else {\n      alert(\"Please select Expert\");\n    }\n  };\n\n  const handleAssignResponse = (data) => {\n    ShowToast(data.message, data.status);\n    getSingle();\n  };\n\n  const submit = (values) => {\n    console.log(values)\n    if (!values?.answer.trim()) {\n      return alert(\"please enter answer\");\n    }\n    let formData = new FormData();\n    formData.append(\"answer\", values.answer);\n    formData.append(\"questId\", String(questData._id));\n\n    Array.from(imageArray).map((file) => formData.append(\"image\", file));\n    post(\"/quest/answer\", formData, 1).then((data) => handleAnswer(data));\n  };\n\n  const handleAnswer = (data) => {\n    ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"answer\", \"\");\n    getSingle();\n    setimageArray([]);\n  };\n\n  const startMeeting = () => {\n    if (confirm('Are You Sure')) {\n      console.log('start meeting')\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Formik\n              initialValues={{\n                title: \"\",\n                title_en: \"\",\n                title_gr: \"\",\n                description_en: \"\",\n                description_gr: \"\",\n                expertId: \"\",\n                answer: \"\",\n              }}\n              // validate={validatequest}\n              onSubmit={(values, { setSubmitting }) => {\n                submit(values);\n                setSubmitting(false);\n              }}\n              innerRef={formRef}\n            >\n              {(props) => (\n                <form onSubmit={props.handleSubmit}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title as=\"h4\">{`Quest ${id ? \"Edit\" : \"Add\"\n                        }`}</Card.Title>\n                    </Card.Header>\n                    <Card.Body>\n                      <Row>\n                        <Col md=\"2\"></Col>\n                        <Col md=\"8\">\n                          <Row>\n                            <Col lg=\"6\">\n                              <Card>\n                                <Card.Header>\n                                  <h4 className=\"cardHeading\">\n                                    Customer Detail\n                                  </h4>\n                                </Card.Header>\n                                <Card.Body>\n                                  <h5>\n                                    Customer Name :{\" \"}\n                                    <strong>{props.values.customerName}</strong>\n                                  </h5>\n                                  <h5>\n                                    Customer Email :{\" \"}\n                                    <strong>\n                                      {props.values.customerEmail}\n                                    </strong>\n                                  </h5>\n                                </Card.Body>\n                              </Card>\n                            </Col>\n                            <Col lg=\"6\">\n                              <Card>\n                                <Card.Header>\n                                  <h4 className=\"cardHeading\">\n                                    Quest Detail\n                                    <span style={{ marginLeft: \"10px\" }}>\n                                      {questData?.isComplete ? (\n                                        <span class=\"badge badge-success\">\n                                          Answered\n                                        </span>\n                                      ) : (\n                                        <span class=\"badge badge-warning\">\n                                          Un-Answered\n                                        </span>\n                                      )}\n                                    </span>\n                                  </h4>\n                                </Card.Header>\n                                <Card.Body>\n                                  <h5>\n                                    Id :{\" \"}\n                                    <strong>{props.values.displayId}</strong>\n                                  </h5>\n                                  <h5>\n                                    Quest Detail :{\" \"}\n                                    <strong>{props.values.questType}</strong>\n                                  </h5>\n                                  <h5>\n                                    Live Session :{\" \"}\n                                    <strong>\n                                      {props?.values?.isLiveSession}{\" \"}\n                                      {props?.values?.isLiveSession\n                                        ? props?.values?.liveSession\n                                        : \"\"}\n                                    </strong>\n                                  </h5>\n\n                                  {props?.values?.isLiveSession && <button type=\"button\" className=\"btn btn-primary\" onClick={startMeeting} >Start Meeting</button>}\n\n                                </Card.Body>\n                              </Card>\n                            </Col>\n                          </Row>\n\n                          <Row>\n                            <Col>\n                              <Card>\n                                <Card.Header>\n                                  <h4 className=\"cardHeading\">Quest</h4>\n                                </Card.Header>\n                                <Card.Body>\n                                  <h5>\n                                    Title :{\" \"}<br />\n                                    <strong>{props?.values?.title}</strong>\n                                  </h5>\n                                  <h5>\n                                    Description :{\" \"}\n\n                                    <div dangerouslySetInnerHTML={{ __html: props?.values?.description }} />\n                                  </h5>\n\n                                  <h4>Document List</h4>\n\n                                  <Row>\n                                    {questData &&\n                                      questData.documents.map((ele, index) => {\n                                        return (\n                                          <>\n                                            <div>\n                                              <Image\n                                                src={`${imageUrl}${ele}`}\n                                                style={{\n                                                  maxHeight: \"80px\",\n                                                  maxWidth: \"80px\",\n                                                  alignItems: \"center\",\n                                                  margin: \"10px\",\n                                                }}\n                                              />\n                                            </div>\n                                          </>\n                                        );\n                                      })}\n                                  </Row>\n                                </Card.Body>\n                              </Card>\n                            </Col>\n                          </Row>\n\n                          <Row>\n                            <Col md=\"6\">\n                              <DefaultSelect\n                                data={expertData}\n                                placeholder={\"Select Expert\"}\n                                name={\"Expert Name\"}\n                                value={props.values.expertId}\n                                onChange={props.handleChange(\"expertId\")}\n                                id={\"expertId\"}\n                                onBlur={() =>\n                                  props.setFieldTouched(\"expertId\", true)\n                                }\n                                error={\n                                  props.touched.expertId &&\n                                  props.errors.expertId\n                                }\n                              />\n                            </Col>\n                            <Col md=\"6\">\n                              <DefaultInput\n                                type={\"text\"}\n                                placeholder={\"Expert Email\"}\n                                name={\"Expert Email\"}\n                                value={props.values.expertEmail}\n                                onChange={props.handleChange(\"expertEmail\")}\n                                onBlur={() =>\n                                  props.setFieldTouched(\"expertEmail\", true)\n                                }\n                                error={\n                                  props.touched.expertEmail &&\n                                  props.errors.expertEmail\n                                }\n                              />\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              {!questData?.isComplete && <button\n                                type=\"button\"\n                                className={\"btn btn-primary\"}\n                                onClick={assign}\n                              >\n                                {questData?.expertId?._id\n                                  ? \"Change Expert\"\n                                  : \"Assign Expert\"}\n                              </button>}\n\n                            </Col>\n\n                            <Col md=\"3\"></Col>\n                          </Row>\n\n                          <Row>\n                            <Col>\n                              <Card>\n                                <Card.Header>\n                                  <h4 className=\"cardHeading\">Threads</h4>\n                                </Card.Header>\n                                <Card.Body>\n                                  {threadData.map((ele, index) => {\n                                    return (\n                                      <>\n                                        <div>\n                                          <h5>\n                                            By :{\" \"}\n                                            <strong>\n                                              {ele?.threadBy?.fName}{\" \"}\n                                              {ele?.threadBy?.lName}\n                                            </strong>\n                                          </h5>\n                                          <div dangerouslySetInnerHTML={{ __html: ele?.content }} />\n\n                                          <Row>\n                                            {ele &&\n                                              ele.documents.map(\n                                                (element, index) => {\n                                                  return (\n                                                    <>\n                                                      <div>\n                                                        <DefaultDocument\n                                                          url={`${imageUrl}${element}`}\n                                                        />\n                                                      </div>\n                                                    </>\n                                                  );\n                                                }\n                                              )}\n                                          </Row>\n                                          <hr></hr>\n                                        </div>\n                                      </>\n                                    );\n                                  })}\n                                </Card.Body>\n                              </Card>\n                            </Col>\n                          </Row>\n\n                          {!questData?.isComplete && questData?.expertId && (\n                            <>\n                              <Row>\n                                <Col>\n                                  <DefaultEditor\n                                    placeholder={\"Answer\"}\n                                    name={\"answer\"}\n                                    value={props.values.answer}\n                                    onChange={props.handleChange(\"answer\")}\n                                    onBlur={() =>\n                                      props.setFieldTouched(\"answer\", true)\n                                    }\n                                    error={\n                                      props.touched.answer &&\n                                      props.errors.answer\n                                    }\n                                  />\n\n                                  <DefaultInput\n                                    placeholder={\"Documents\"}\n                                    label={\"Documents\"}\n                                    name={\"documents\"}\n                                    type={\"file\"}\n                                    accept=\"image/*,application/pdf,application/doc,application/docx\"\n                                    multiple={true}\n                                    // value={imageUrl}\n                                    // @ts-ignore\n                                    onChange={(e) =>\n                                      setimageArray(e.target.files)\n                                    }\n                                    onBlur={() =>\n                                      props.setFieldTouched(\"documents\", true)\n                                    }\n                                    error={\n                                      props.touched.documents &&\n                                      props.errors.documents\n                                    }\n                                  />\n                                </Col>\n                              </Row>\n                              <Row>\n                                <Col md=\"3\"></Col>\n                                <Col md=\"2\">\n                                  <button\n                                    type=\"submit\"\n                                    className={\"btn btn-success\"}\n                                  >\n                                    {\"Submit\"}\n                                  </button>\n                                </Col>\n                                <Col md=\"2\">\n                                  <button\n                                    type=\"button\"\n                                    className={\"btn btn-warning\"}\n                                    onClick={() => history.goBack()}\n                                  >\n                                    {\"Go Back\"}\n                                  </button>\n                                </Col>\n\n                                <Col md=\"3\"></Col>\n                              </Row>\n                            </>\n                          )}\n                        </Col>\n                        <Col md=\"2\"></Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </form>\n              )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultEditor,\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateFaq, validateTemplate } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function ContactAdd(props) {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n  }, []);\n\n  const getSingle = () => {\n    if (id)\n      get(`/contact/getSingle?_id=${id}`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"question\", data?.data?.question);\n    formRef.current.setFieldValue(\"answer\", data?.data?.answer);\n  };\n\n  const submit = (values) => {\n    let formData = {\n      question: values.question,\n      answer: values.answer,\n    };\n    if (id)\n      put(`${`/contact/update?_id=${id}`}`, formData).then((data) =>\n        handleResponse(data)\n      );\n    else\n      post(`${\"/contact/insert\"}`, formData).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id) history.goBack();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{`Contact ${id ? \"Edit\" : \"Add\"}`}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{ question: \"\", answer: \"\" }}\n                      validate={validateFaq}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Question\"}\n                            name={\"question\"}\n                            value={props.values.question}\n                            onChange={props.handleChange(\"question\")}\n                            onBlur={() => props.setFieldTouched(\"question\", true)}\n                            error={props.touched.question && props.errors.question}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"answer\"}\n                            name={\"answer\"}\n                            value={props.values.answer}\n                            onChange={props.handleChange(\"answer\")}\n                            onBlur={() => props.setFieldTouched(\"answer\", true)}\n                            error={props.touched.answer && props.errors.answer}\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n  Image,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultMobileInput,\n  DefaultSelect,\n  DefaultTextarea,\n} from \"../../components/Common/input\";\nimport { validateCustomer, validateExpert } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function GlobalAdd(props) {\n  const history = useHistory();\n\n  const [experience, setExperience] = useState([]);\n  const [technology, setTechnology] = useState([]);\n  const [imageUrl, setimageUrl] = useState(\"\");\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n  const fileRef = useRef(null);\n\n  useEffect(() => {\n    getSingle();\n  }, []);\n\n  const getSingle = () => {\n    get(`/global/getSingle`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    setimageUrl(data?.imageUrl);\n    formRef.current.setFieldValue(\"title\", data?.data?.title);\n    formRef.current.setFieldValue(\"description\", data?.data?.description);\n    formRef.current.setFieldValue(\"email\", data?.data?.email);\n    formRef.current.setFieldValue(\"phone\", data?.data?.phone);\n    formRef.current.setFieldValue(\"address\", data?.data?.address);\n    formRef.current.setFieldValue(\"facebook\", data?.data?.facebook);\n    formRef.current.setFieldValue(\"twitter\", data?.data?.twitter);\n    formRef.current.setFieldValue(\"linkden\", data?.data?.linkden);\n    formRef.current.setFieldValue(\"creditType\", data?.data?.creditType);\n    formRef.current.setFieldValue(\"creditLiveSession\", data?.data?.creditLiveSession);\n  };\n\n  const submit = (values) => {\n    let formData = new FormData();\n    for (var ele in values) {\n      formData.append(ele, values[ele]);\n    }\n\n    post(`${\"/global/insert\"}`, formData, 1).then((data) =>\n      handleResponse(data)\n    );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    if (!id && data.status) history.replace(\"global\");\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{\"Global Setting\"}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        title: \"\",\n                        description: \"\",\n                        address: \"\",\n                        email: \"\",\n                        phone: \"\",\n                        facebook: \"\",\n                        twitter: \"\",\n                        linkden: \"\",\n                        creditType: \"\",\n                        creditLiveSession:\"\"\n                      }}\n                      //   validate={(values) => validateCustomer(values, id)}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Title\"}\n                            name={\"title\"}\n                            id={\"title\"}\n                            maxLength={50}\n                            value={props.values.title}\n                            onChange={props.handleChange(\"title\")}\n                            onBlur={() => props.setFieldTouched(\"title\", true)}\n                            error={props.touched.title && props.errors.title}\n                          />\n\n                          <DefaultTextarea\n                            placeholder={\"Description\"}\n                            name={\"description\"}\n                            id={\"description\"}\n                            maxLength={50}\n                            value={props.values.description}\n                            onChange={props.handleChange(\"description\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"description\", true)\n                            }\n                            error={\n                              props.touched.description &&\n                              props.errors.description\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"number\"}\n                            placeholder={\"Credit Deducation for Quest Type\"}\n                            name={\"Credit Deducation For Quest Type\"}\n                            id={\"creditType\"}\n                            maxLength={10}\n                            value={props.values.creditType}\n                            onChange={props.handleChange(\"creditType\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"creditType\", true)\n                            }\n                            error={\n                              props.touched.creditType && props.errors.creditType\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"number\"}\n                            placeholder={\"Credit Deducation for Live Session\"}\n                            name={\"Credit Deducation For Live Session\"}\n                            id={\"creditLiveSession\"}\n                            maxLength={10}\n                            value={props.values.creditLiveSession}\n                            onChange={props.handleChange(\"creditLiveSession\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"creditLiveSession\", true)\n                            }\n                            error={\n                              props.touched.creditLiveSession && props.errors.creditLiveSession\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"address\"}\n                            name={\"address\"}\n                            id={\"address\"}\n                            maxLength={50}\n                            value={props.values.address}\n                            onChange={props.handleChange(\"address\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"address\", true)\n                            }\n                            error={\n                              props.touched.address && props.errors.address\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"email\"}\n                            name={\"email\"}\n                            id={\"email\"}\n                            maxLength={50}\n                            value={props.values.email}\n                            onChange={props.handleChange(\"email\")}\n                            onBlur={() => props.setFieldTouched(\"email\", true)}\n                            error={props.touched.email && props.errors.email}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"phone\"}\n                            name={\"phone\"}\n                            id={\"phone\"}\n                            maxLength={50}\n                            value={props.values.phone}\n                            onChange={props.handleChange(\"phone\")}\n                            onBlur={() => props.setFieldTouched(\"phone\", true)}\n                            error={props.touched.phone && props.errors.phone}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"facebook\"}\n                            name={\"facebook\"}\n                            id={\"facebook\"}\n                            maxLength={50}\n                            value={props.values.facebook}\n                            onChange={props.handleChange(\"facebook\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"facebook\", true)\n                            }\n                            error={\n                              props.touched.facebook && props.errors.facebook\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"twitter\"}\n                            name={\"twitter\"}\n                            id={\"twitter\"}\n                            maxLength={50}\n                            value={props.values.twitter}\n                            onChange={props.handleChange(\"twitter\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"twitter\", true)\n                            }\n                            error={\n                              props.touched.twitter && props.errors.twitter\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"linkden\"}\n                            name={\"linkden\"}\n                            id={\"linkden\"}\n                            maxLength={50}\n                            value={props.values.linkden}\n                            onChange={props.handleChange(\"linkden\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"linkden\", true)\n                            }\n                            error={\n                              props.touched.linkden && props.errors.linkden\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"file\"}\n                            placeholder={\"Image\"}\n                            name={\"image\"}\n                            // value={props.values.image}\n                            accept=\"image/*\"\n                            refr={fileRef}\n                            onChange={(e) => {\n                              props.setFieldValue(\"image\", e.target.files[0]);\n                            }}\n                            onBlur={() => props.setFieldTouched(\"image\", true)}\n                            error={props.touched.image && props.errors.image}\n                          />\n\n                          {props.values.image && (\n                            <Image\n                              src={`${imageUrl}${props.values.image}`}\n                              roundedCircle\n                              style={{\n                                maxHeight: \"90px\",\n                                maxWidth: \"90px\",\n                                borderRadius: 50,\n                                alignItems: \"center\",\n                                marginTop: \"10px\",\n                                marginBottom: \"10px\",\n                              }}\n                            />\n                          )}\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n  Image,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport moment from \"moment\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"Revenue\",\n    },\n  },\n};\n\nconst labels = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [21, 20, 43, 4, 3, 43, 54, 5, 45, 45, 45, 12],\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n  ],\n};\n\nexport default function Dashboard(props) {\n  const [userData, setuserData] = useState([]);\n  const [questData, setquestData] = useState([]);\n  const [transaction, settransaction] = useState([]);\n  const [chartData, setchartData] = useState();\n  const [imageUrl, setimageUrl] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n    getChartData();\n  }, []);\n\n  const getData = () => {\n    get(`/auth/dashborad`).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData(data?.users);\n      setquestData(data?.threads);\n      settransaction(data?.transactions);\n      setimageUrl(data?.imageUrl);\n    }\n  };\n\n  const getChartData = () => {\n    get(`/auth/getChartData`).then((data) => handleChartResponse(data));\n  };\n\n  const handleChartResponse = (data) => {\n    let temp = data?.data?.data.map((item) => item?.users);\n    const as = {\n      labels,\n      datasets: [\n        {\n          label: \"Revenue\",\n          data: temp,\n          borderColor: \"rgb(255, 99, 132)\",\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        },\n      ],\n    };\n    setchartData(as);\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"4\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Latest Quest Replies</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                {questData.map((item, index) => {\n                  return (\n                    <div className=\"row\" key={index}>\n                      <div className=\"col-md-10\">\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item?.content }}\n                          style={{ height: \"45px\", overflow: \"hidden\" }}\n                        />\n                        <pre>\n                          {moment(item?.createdAt).format(\"DD/MMM/YYYY\")}\n                        </pre>\n                      </div>\n                      <div className=\"col-md-2\">\n                        <button className=\"btn btn-info\">Go</button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Latest Users</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                {userData.map((item, index) => {\n                  return (\n                    <div className=\"row\" key={index}>\n                      <div className=\"col-md-2\">\n                        <Image\n                          src={`${imageUrl}${item?.image}`}\n                          roundedCircle\n                          style={{\n                            maxHeight: \"40px\",\n                            width: \"auto\",\n                          }}\n                        />\n                      </div>\n                      <div className=\"col-md-10\">\n                        <h4 style={{ margin: \"0px\" }}>\n                          {item?.fName} {item?.lName}\n                        </h4>\n                        <p>{item?.email}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Latest Transactions</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                {transaction.map((item, index) => {\n                  return (\n                    <div className=\"row\" key={index}>\n                      <div className=\"col-md-8\">\n                        <h5 style={{ margin: \"0px\" }}>\n                          {item?.userId?.fName} {item?.userId?.lName}\n                        </h5>\n                        <p>{item?.userId.email}</p>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <h5 style={{ margin: \"0px\" }}>$ {item?.amount}</h5>\n                        <p style={{ margin: \"0px\" }}>By- {item?.type}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        <Card>\n          <Card.Header>\n            <Card.Title as=\"h4\">Revenue</Card.Title>\n          </Card.Header>\n          <Card.Body style={{ padding: \"40px\" }}>\n            <Line\n              options={options}\n              data={\n                chartData && chartData.labels && chartData.datasets\n                  ? chartData\n                  : data\n              }\n            />\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n  Image,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport moment from \"moment\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Doughnut, Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"Revenue\",\n    },\n  },\n};\n\nconst labels = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [21, 20, 43, 4, 3, 43, 54, 5, 45, 45, 45, 12],\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n  ],\n};\n\nexport default function Insights(props) {\n  const [chartData, setchartData] = useState();\n  const [newUserData, setnewUserData] = useState();\n  const [insightsType, setinsightsType] = useState(1);\n  const [imageUrl, setimageUrl] = useState(\"\");\n\n  const [userList, setuserList] = useState([]);\n  const [userAmountList, setuserAmountList] = useState([]);\n  const [questPerUser, setquestPerUser] = useState([]);\n  const [userData, setuserData] = useState([]);\n  const [barChartData, setbarChartData] = useState();\n\n  const [showQuestData, setshowQuestData] = useState({});\n\n  useEffect(() => {\n    getChartData();\n  }, []);\n\n  const getChartData = () => {\n    get(`/auth/getChartDataInsight`).then((data) => handleChartResponse(data));\n  };\n\n  const handleChartResponse = (data) => {\n    setquestPerUser(data?.data?.questPerUser);\n    setshowQuestData({\n      priority: data?.data?.priority,\n      questData: data?.data?.questData,\n      meeting: data?.data?.meeting,\n    });\n    let temp = data?.data?.data.map((item) => item?.users);\n    let temp1 = data?.data?.data.map((item) => (item?.total ? item?.total : 0));\n    console.log(temp1);\n\n    const as = {\n      labels,\n      datasets: [\n        {\n          label: \"Revenue\",\n          data: temp,\n          borderColor: \"rgb(255, 99, 132)\",\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        },\n      ],\n    };\n    setchartData(as);\n    setnewUserData({\n      labels,\n      datasets: [\n        {\n          label: \"New User\",\n          data: temp1,\n          borderColor: \"rgb(255, 99, 132)\",\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        },\n      ],\n    });\n\n    let newArray = data?.data?.getRevenuePerUser.map((ele) => {\n      return {\n        fName:\n          ele.user && ele.user.length\n            ? `${ele.user[0].fName} ${ele.user[0].lName}`\n            : \"-\",\n        total: ele.total,\n        count: ele.count,\n      };\n    });\n    let userList = newArray.map((ele) => ele.fName);\n    let amountList = newArray.map((ele) => (ele.total ? ele.total : 0));\n    setuserList(userList);\n    setuserAmountList(amountList);\n\n    setbarChartData({\n      labels: userList,\n      datasets: [\n        {\n          label: \"Revenue From User\",\n          data: amountList,\n          borderColor: \"rgb(255, 99, 132)\",\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        },\n      ],\n    });\n  };\n\n  const getPercent = (total, number) => (number * 100) / total;\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <Button\n            variant=\"primary\"\n            active={insightsType == 1}\n            onClick={() => setinsightsType(1)}\n          >\n            Finance\n          </Button>{\" \"}\n          <Button\n            variant=\"primary\"\n            active={insightsType == 2}\n            onClick={() => setinsightsType(2)}\n          >\n            Quests\n          </Button>{\" \"}\n          <Button\n            variant=\"primary\"\n            active={insightsType == 3}\n            onClick={() => setinsightsType(3)}\n          >\n            Users\n          </Button>{\" \"}\n        </div>\n\n        {insightsType == 1 ? (\n          <div>\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Revenue</Card.Title>\n              </Card.Header>\n              <Card.Body style={{ padding: \"10px\" }}>\n                <Line\n                  height={\"55%\"}\n                  options={options}\n                  data={\n                    chartData && chartData.labels && chartData.datasets\n                      ? chartData\n                      : data\n                  }\n                />\n              </Card.Body>\n            </Card>\n\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Top Revenue From Users</Card.Title>\n              </Card.Header>\n              <Card.Body style={{ padding: \"10px\" }}>\n                <Bar\n                  height={\"55%\"}\n                  options={options}\n                  data={\n                    barChartData && barChartData.labels && barChartData.datasets\n                      ? barChartData\n                      : data\n                  }\n                />\n              </Card.Body>\n            </Card>\n          </div>\n        ) : insightsType == 2 ? (\n          <div>\n            <Row>\n              <Col md=\"3\">\n                <Card>\n                  <Card.Header>\n                    <Card.Title as=\"h4\">Number Of Quests</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <h4\n                      style={{ margin: \"0px\" }}\n                    >{`${showQuestData?.questData?.questComplete} of ${showQuestData?.questData?.quest}`}</h4>\n                    <p>{`${showQuestData?.questData?.percent}% Of all quests answered`}</p>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md=\"3\">\n                <Card>\n                  <Card.Header>\n                    <Card.Title as=\"h4\">Priority Quests</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <h4 style={{ margin: \"0px\" }}>\n                      {showQuestData?.priority?.priorityQuest}\n                    </h4>\n                    <p>{`${showQuestData?.priority?.priorityPercent}% quests are marked as priority`}</p>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md=\"3\">\n                <Card>\n                  <Card.Header>\n                    <Card.Title as=\"h4\">Schedules Meetings</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <h4 style={{ margin: \"0px\" }}>\n                      {showQuestData?.meeting?.meetingQuest}\n                    </h4>\n                    <p>{`${showQuestData?.meeting?.meetingPercent}% quests are marked as priority`}</p>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md=\"3\">\n                <Card>\n                  <Card.Header>\n                    <Card.Title as=\"h4\">Average Time</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <h4 style={{ margin: \"0px\" }}>6 Days</h4>\n                    <p>1 - 24 days to completed quest</p>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Quests Per User</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>User</th>\n                      <th>Quests</th>\n                      <th>Solved</th>\n                      <th>Priority</th>\n                      <th>Meeting</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {questPerUser.map((ele, index) => {\n                      return (\n                        <>\n                          <tr>\n                            <td>{`${ele?.user[0].fName} ${ele?.user[0].lName}`}</td>\n                            <td>{ele?.total}</td>\n                            <td>{`${getPercent(ele?.total, ele?.solved)}%`}</td>\n                            <td>{ele?.priority}</td>\n                            <td>{ele?.meeting}</td>\n                          </tr>\n                        </>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!questPerUser.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                {/* <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                /> */}\n              </Card.Body>\n            </Card>\n          </div>\n        ) : (\n          <div>\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">New Users</Card.Title>\n              </Card.Header>\n              <Card.Body style={{ padding: \"10px\" }}>\n                <Line\n                  height={\"55%\"}\n                  options={options}\n                  data={\n                    newUserData && newUserData.labels && newUserData.datasets\n                      ? newUserData\n                      : data\n                  }\n                />\n              </Card.Body>\n            </Card>\n          </div>\n        )}\n      </Container>\n    </>\n  );\n}\n","// Auth\nimport Login from \"views/auth/login\";\nimport Forgot from \"views/auth/forgot\";\nimport Reset from \"views/auth/reset\";\n\n// Temp\n// import Dashboard from \"views/Dashboard.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport TableList from \"views/TableList.js\";\nimport ComingSoon from \"views/comingSoon.js\";\n\n// Profile\nimport Profile from \"views/profile/profile\";\nimport ChangePassword from \"views/profile/changepassword\";\n\n// Technology\nimport TechnologyList from \"./views/technology/list\";\nimport TechnologyAdd from \"./views/technology/add\";\n\n// Expert\nimport ExpertList from \"./views/experts/list\";\nimport ExpertAdd from \"./views/experts/add\";\n\n// Customer\nimport CustomerList from \"./views/customer/list\";\nimport CustomerAdd from \"./views/customer/add\";\n\n// Template\nimport TemplateList from \"./views/template/list\";\nimport TemplateAdd from \"./views/template/add\";\n\n// CMS\nimport CmsList from \"./views/cms/list\";\nimport CmsAdd from \"./views/cms/add\";\n\n// FAQ\nimport FaqList from \"./views/faq/list\";\nimport FaqAdd from \"./views/faq/add\";\n\n// Attack\nimport AttackList from \"./views/attack/list\";\nimport AttackAdd from \"./views/attack/add\";\n\n// Law\nimport LawList from \"./views/law/list\";\nimport LawAdd from \"./views/law/add\";\n\n// Quest\nimport QuestList from \"./views/quest/list\";\nimport QuestAdd from \"./views/quest/add\";\n\n// Quest\nimport ContactList from \"./views/inbox/list\";\nimport ContactAdd from \"./views/inbox/add\";\n\nimport GlobalAdd from \"./views/global/index\";\n\nimport Dashboard from \"./views/dashboard/index\";\nimport Insights from \"./views/dashboard/insights\";\n\nexport const mainRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: Dashboard,\n  },\n  {\n    path: \"/insights\",\n    name: \"Insights\",\n    component: Insights,\n  },\n  {\n    path: \"/quests\",\n    name: \"Quests\",\n    component: QuestList,\n  },\n  {\n    path: \"/quests/add\",\n    name: \"Quests\",\n    component: QuestAdd,\n  },\n  {\n    path: \"/quests/edit/:id\",\n    name: \"Quests\",\n    component: QuestAdd,\n  },\n  {\n    path: \"/awareness\",\n    name: \"Awareness\",\n    component: ComingSoon,\n  },\n  {\n    path: \"/cyber-intel\",\n    name: \"Cyber Intel\",\n    icon: \"nc-icon nc-circle-09\",\n    component: ComingSoon,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/payments\",\n    name: \"Payments\",\n    component: ComingSoon,\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    component: ComingSoon,\n  },\n  {\n    path: \"/inbox\",\n    name: \"Inbox\",\n    component: ContactList,\n  },\n  {\n    path: \"/inbox/add\",\n    name: \"Inbox\",\n    component: ContactAdd,\n  },\n  {\n    path: \"/inbox/edit/:id\",\n    name: \"Inbox\",\n    component: ContactAdd,\n  },\n  {\n    path: \"/settings\",\n    name: \"Settings\",\n    component: ComingSoon,\n  },\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    component: Profile,\n  },\n  {\n    path: \"/change-password\",\n    name: \"Change Password\",\n    component: ChangePassword,\n  },\n  {\n    path: \"/technology\",\n    name: \"Technology\",\n    component: TechnologyList,\n  },\n  {\n    path: \"/technology/add\",\n    name: \"Technology\",\n    component: TechnologyAdd,\n  },\n  {\n    path: \"/technology/edit/:id\",\n    name: \"Technology\",\n    component: TechnologyAdd,\n  },\n  {\n    path: \"/expert\",\n    name: \"Expert\",\n    component: ExpertList,\n  },\n  {\n    path: \"/expert/add\",\n    name: \"Expert\",\n    component: ExpertAdd,\n  },\n  {\n    path: \"/expert/edit/:id\",\n    name: \"Expert\",\n    component: ExpertAdd,\n  },\n  {\n    path: \"/customer\",\n    name: \"Customer\",\n    component: CustomerList,\n  },\n  {\n    path: \"/customer/add\",\n    name: \"Customer\",\n    component: CustomerAdd,\n  },\n  {\n    path: \"/customer/edit/:id\",\n    name: \"Customer\",\n    component: CustomerAdd,\n  },\n  {\n    path: \"/template\",\n    name: \"Template\",\n    component: TemplateList,\n  },\n  {\n    path: \"/template/add\",\n    name: \"Template\",\n    component: TemplateAdd,\n  },\n  {\n    path: \"/template/edit/:id\",\n    name: \"Template\",\n    component: TemplateAdd,\n  },\n  {\n    path: \"/cms\",\n    name: \"CMS\",\n    component: CmsList,\n  },\n  {\n    path: \"/cms/add\",\n    name: \"CMS\",\n    component: CmsAdd,\n  },\n  {\n    path: \"/cms/edit/:id\",\n    name: \"CMS\",\n    component: CmsAdd,\n  },\n  {\n    path: \"/faq\",\n    name: \"Faq\",\n    component: FaqList,\n  },\n  {\n    path: \"/faq/add\",\n    name: \"Faq\",\n    component: FaqAdd,\n  },\n  {\n    path: \"/faq/edit/:id\",\n    name: \"Faq\",\n    component: FaqAdd,\n  },\n\n  {\n    path: \"/attack\",\n    name: \"Attack\",\n    component: AttackList,\n  },\n  {\n    path: \"/attack/add\",\n    name: \"Attack\",\n    component: AttackAdd,\n  },\n  {\n    path: \"/attack/edit/:id\",\n    name: \"Attack\",\n    component: AttackAdd,\n  },\n  {\n    path: \"/law\",\n    name: \"Attack\",\n    component: LawList,\n  },\n  {\n    path: \"/law/add\",\n    name: \"Attack\",\n    component: LawAdd,\n  },\n  {\n    path: \"/law/edit/:id\",\n    name: \"Attack\",\n    component: LawAdd,\n  },\n  {\n    path: \"/global\",\n    name: \"Global Setting\",\n    component: GlobalAdd,\n  },\n];\n\nexport const authRoutes = [\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Login,\n    layout: \"/Auth\",\n  },\n  {\n    path: \"/forgot\",\n    name: \"Forgot\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Forgot,\n    layout: \"/Auth\",\n  },\n  {\n    path: \"/reset-password/:id\",\n    name: \"Reset Password\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Reset,\n    layout: \"/Auth\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n  Modal,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultTextarea,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function ContactList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n  const [show, setShow] = useState({\n    show: false,\n    _id: null,\n  });\n  const [reply, setReply] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/contact/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(\n        `${status ? \"/contact/inactive\" : \"/contact/active\"}`,\n        formData\n      ).then((data) => {\n        handleStatusChange(data);\n      });\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${\"/contact/delete\"}`, formData).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  const handleClose = () => setShow(false);\n\n  const sendReply = () => {\n    let formData = {\n      _id: show._id,\n      reply: reply,\n    };\n    post(\"/contact/reply\", formData).then((data) => handleReply(data));\n  };\n\n  const handleReply = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n    setShow({\n      show: false,\n      _id: null,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">contact</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Message</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.name}</td>\n                          <td>{ele?.email}</td>\n                          <td>{ele?.message}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Button\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={() => {\n                                  !ele?.isReplied\n                                    ? setShow({ show: true, _id: ele?._id })\n                                    : null;\n                                  setReply(\"\");\n                                }}\n                              >\n                                {ele?.isReplied ? \"Replied\" : \"Reply\"}\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n\n        <Modal show={show.show} onHide={() => handleClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Reply</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <DefaultTextarea\n              type={\"text\"}\n              placeholder={\"Reply\"}\n              name={\"Add reply to send on user's email\"}\n              value={reply}\n              onChange={(e) => setReply(e.target.value)}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => sendReply()}>\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n  Image,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultMobileInput,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateProfile } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function Profile(props) {\n  const history = useHistory();\n\n  const [imageUrl, setimageUrl] = useState();\n\n  const { id } = useParams();\n  const formRef = useRef(null);\n  const fileRef = useRef(null);\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  const getProfile = () => {\n    get(`/auth/profile`).then((data) => handleSingleData(data));\n  };\n\n  const handleSingleData = (data) => {\n    if (!data.status) return ShowToast(data.message, data.status);\n    formRef.current.setFieldValue(\"fName\", data?.data?.fName);\n    formRef.current.setFieldValue(\"lName\", data?.data?.lName);\n    formRef.current.setFieldValue(\"email\", data?.data?.email);\n    formRef.current.setFieldValue(\"mobile\", data?.data?.mobile);\n    if (data?.data?.image)\n      setimageUrl(`${data?.imageUrl}/${data?.data?.image}`);\n  };\n\n  const submit = async (values) => {\n    let formData = new FormData();\n    for (var ele in values) {\n      formData.append(ele, values[ele]);\n    }\n    post(`${\"/auth/profile\"}`, formData, 1).then((data) =>\n      handleResponse(data)\n    );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    formRef.current.resetForm();\n    fileRef.current.value = null;\n    getProfile();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{\"Profile\"}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flex: \"1\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {imageUrl && (\n                        <Image\n                          src={`${imageUrl}`}\n                          roundedCircle\n                          style={{\n                            maxHeight: \"80px\",\n                            maxWidth: \"80px\",\n                            alignItems: \"center\",\n                          }}\n                        />\n                      )}\n                    </div>\n\n                    <Formik\n                      initialValues={{\n                        fName: \"\",\n                        lName: \"\",\n                        email: \"\",\n                        gender: \"\",\n                        image: \"\",\n                        mobile: \"\",\n                      }}\n                      validate={validateProfile}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"First Name\"}\n                            name={\"fName\"}\n                            id={\"fName\"}\n                            value={props.values.fName}\n                            onChange={props.handleChange(\"fName\")}\n                            onBlur={() => props.setFieldTouched(\"fName\", true)}\n                            error={props.touched.fName && props.errors.fName}\n                          />\n\n                          <DefaultInput\n                            type={\"text\"}\n                            placeholder={\"Last Name\"}\n                            name={\"lName\"}\n                            id={\"lName\"}\n                            value={props.values.lName}\n                            onChange={props.handleChange(\"lName\")}\n                            onBlur={() => props.setFieldTouched(\"lName\", true)}\n                            error={props.touched.lName && props.errors.lName}\n                          />\n\n                          <DefaultInput\n                            type={\"email\"}\n                            placeholder={\"Email\"}\n                            name={\"email\"}\n                            id={\"email\"}\n                            disabled={true}\n                            value={props.values.email}\n                            // onChange={props.handleChange(\"email\")}\n                            onBlur={() => props.setFieldTouched(\"email\", true)}\n                            error={props.touched.email && props.errors.email}\n                          />\n\n                          <DefaultMobileInput\n                            type={\"text\"}\n                            placeholder={\"Mobile\"}\n                            name={\"mobile\"}\n                            id={\"mobile\"}\n                            value={props.values.mobile}\n                            onChange={(val) =>\n                              props.setFieldValue(\"mobile\", val || \"\")\n                            }\n                            onBlur={() => props.setFieldTouched(\"mobile\", true)}\n                            error={props.touched.mobile && props.errors.mobile}\n                          />\n\n                          <DefaultInput\n                            type={\"file\"}\n                            placeholder={\"Image\"}\n                            name={\"image\"}\n                            accept=\"image/*\"\n                            // value={props.values.image}\n                            refr={fileRef}\n                            onChange={(e) => {\n                              props.setFieldValue(\"image\", e.target.files[0]);\n                            }}\n                            onBlur={() => props.setFieldTouched(\"image\", true)}\n                            error={props.touched.image && props.errors.image}\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  Pagination,\n  Image,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { post, get, put } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n  DefaultSelect,\n} from \"../../components/Common/input\";\nimport { validateChangePass } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\n\nexport default function ChangePassword(props) {\n  const history = useHistory();\n\n  const [imageUrl, setimageUrl] = useState();\n\n  const formRef = useRef(null);\n\n  useEffect(() => {}, []);\n\n  const submit = async (values) => {\n    post(`${\"/auth/change-password\"}`, values).then((data) =>\n      handleResponse(data)\n    );\n  };\n\n  const handleResponse = (data) => {\n    ShowToast(data.message, data.status);\n    formRef.current.resetForm();\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">{\"Change Password\"}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Row>\n                  <Col md=\"2\"></Col>\n                  <Col md=\"8\">\n                    <Formik\n                      initialValues={{\n                        currentPassword: \"\",\n                        newPassword: \"\",\n                        confirmNewPassword: \"\",\n                      }}\n                      validate={validateChangePass}\n                      onSubmit={(values, { setSubmitting }) => {\n                        submit(values);\n                        setSubmitting(false);\n                      }}\n                      innerRef={formRef}\n                    >\n                      {(props) => (\n                        <form onSubmit={props.handleSubmit}>\n                          <DefaultInput\n                            type={\"password\"}\n                            placeholder={\"Current Password\"}\n                            name={\"Current Password\"}\n                            id={\"currentPassword\"}\n                            value={props.values.currentPassword}\n                            onChange={props.handleChange(\"currentPassword\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"currentPassword\", true)\n                            }\n                            error={\n                              props.touched.currentPassword &&\n                              props.errors.currentPassword\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"password\"}\n                            placeholder={\"New Password\"}\n                            name={\"New Password\"}\n                            id={\"NewPassword\"}\n                            value={props.values.newPassword}\n                            onChange={props.handleChange(\"newPassword\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"newPassword\", true)\n                            }\n                            error={\n                              props.touched.newPassword &&\n                              props.errors.newPassword\n                            }\n                          />\n\n                          <DefaultInput\n                            type={\"password\"}\n                            placeholder={\"Confirm New Password\"}\n                            name={\"Confirm New Password\"}\n                            id={\"confirmNewPassword\"}\n                            value={props.values.confirmNewPassword}\n                            onChange={props.handleChange(\"confirmNewPassword\")}\n                            onBlur={() =>\n                              props.setFieldTouched(\"confirmNewPassword\", true)\n                            }\n                            error={\n                              props.touched.confirmNewPassword &&\n                              props.errors.confirmNewPassword\n                            }\n                          />\n\n                          <Row>\n                            <Col md=\"3\"></Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"submit\"\n                                className={\"btn btn-success\"}\n                                disabled={props.isSubmitting}\n                              >\n                                Submit\n                              </button>\n                            </Col>\n                            <Col md=\"2\">\n                              <button\n                                type=\"button\"\n                                className={\"btn btn-warning\"}\n                                onClick={() => history.goBack()}\n                              >\n                                Go Back\n                              </button>\n                            </Col>\n                            <Col md=\"3\"></Col>\n                          </Row>\n                        </form>\n                      )}\n                    </Formik>\n                  </Col>\n                  <Col md=\"2\"></Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Table,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { post, get, deleteApi } from \"../../utils/api\";\nimport {\n  DefaultInput,\n  DefaultInputWithIcon,\n} from \"../../components/Common/input\";\nimport { validateForgetPassword } from \"../../utils/validator\";\nimport { Formik } from \"formik\";\nimport { ShowToast } from \"../../components/Common/common\";\nimport Pagination from \"react-js-pagination\";\nimport { DefaultLoader } from \"../../components/Common/common\";\n\nexport default function AttackList(props) {\n  const [pageData, setpageData] = useState({\n    page: 1,\n    perPage: 10,\n    searchItem: \"\",\n  });\n  const [userData, setuserData] = useState([]);\n  const [totalPages, settotalPages] = useState(0);\n\n  const [searchItem, setsearchItem] = useState(\"\");\n  const [loader, setloader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, [pageData]);\n\n  const getData = () => {\n    get(\n      `/attack/get?page=${pageData?.page || 1}&perPage=${\n        pageData?.perPage || 10\n      }&searchItem=${pageData?.searchItem || \"\"}`\n    ).then((data) => handleResponse(data));\n  };\n\n  const handleResponse = (data) => {\n    if (!data.status) ShowToast(data.message, data.status);\n    else {\n      setuserData([...data?.data]);\n      settotalPages(data?.pages);\n    }\n  };\n\n  const changePage = (index) => {\n    setpageData({\n      ...pageData,\n      page: index,\n    });\n  };\n\n  const statusChange = (status, id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      post(`${status ? \"/attack/inactive\" : \"/attack/active\"}`, formData).then(\n        (data) => {\n          handleStatusChange(data);\n        }\n      );\n    }\n  };\n\n  const handleStatusChange = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const deleteData = (id) => {\n    if (confirm(\"Are you sure\")) {\n      let formData = {\n        _id: id,\n      };\n      deleteApi(`/attack/delete?_id=${id}`).then((data) => {\n        handleDelete(data);\n      });\n    }\n  };\n\n  const handleDelete = (data) => {\n    ShowToast(data.message, data.status);\n    getData();\n  };\n\n  const onSearchCLick = () => {\n    setpageData({\n      ...pageData,\n      searchItem: searchItem,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"container\" fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">attack</Card.Title>\n                <Row>\n                  <Col md=\"4\">\n                    <DefaultInputWithIcon\n                      type={\"text\"}\n                      placeholder=\"search\"\n                      customType={\"search\"}\n                      value={searchItem}\n                      onClick={onSearchCLick}\n                      onChange={(e) => setsearchItem(e.target.value)}\n                    />\n                  </Col>\n                  <Col md=\"6\"></Col>\n                  <Col md=\"2\">\n                    <Link className=\"btn btn-primary\" to=\"/admin/attack/add\">\n                      Add\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Body>\n                <Table bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>S. No</th>\n                      <th>Country</th>\n                      <th>Title (En)</th>\n                      <th>Title (Gr)</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userData.map((ele, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>\n                            {pageData?.perPage * (pageData?.page - 1) +\n                              index +\n                              1}\n                          </td>\n                          <td>{ele?.country}</td>\n                          <td>{ele?.titleEN}</td>\n                          <td>{ele?.titleDE}</td>\n                          <td>\n                            <Button\n                              size=\"sm\"\n                              variant={ele?.status ? \"success\" : \"danger\"}\n                              onClick={() =>\n                                statusChange(ele?.status, ele?._id)\n                              }\n                            >\n                              {ele?.status ? \"Active\" : \"Deactive\"}\n                            </Button>\n                          </td>\n                          <td>\n                            <ButtonGroup aria-label=\"Basic example\">\n                              <Link\n                                className=\"btn btn-primary btn-sm\"\n                                to={`attack/edit/${ele?._id}`}\n                              >\n                                Edit\n                              </Link>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                onClick={() => deleteData(ele?._id)}\n                              >\n                                Delete\n                              </Button>\n                            </ButtonGroup>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n\n                {!userData.length && (\n                  <>\n                    <h1>NO data</h1>\n                  </>\n                )}\n\n                <Pagination\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activePage={pageData?.page}\n                  itemsCountPerPage={pageData?.perPage}\n                  totalItemsCount={totalPages * 10}\n                  pageRangeDisplayed={5}\n                  onChange={changePage}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* <DefaultLoader visible={loader} /> */}\n      </Container>\n    </>\n  );\n}\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar, Container, Nav, Dropdown, Button } from \"react-bootstrap\";\n\nimport { mainRoutes } from \"routes.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authentication } from \"redux/action/auth\";\nimport { TOKEN } from \"redux/constants\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Header(props) {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const userDetail = useSelector((state) => state.userDetailReducer);\n\n  // console.log(userDetail);\n\n  const logout = () => {\n    dispatch(authentication(TOKEN, { token: null, userId: null }));\n  };\n\n  const location = useLocation();\n  const mobileSidebarToggle = (e) => {\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function () {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  };\n\n  const getBrandText = () => {\n    for (let i = 0; i < mainRoutes.length; i++) {\n      const name = location.pathname.split(\"/\");\n      // console.log('mainRoutes', location.pathname.indexOf('/admin'))\n      // console.log('mainRoutes', mainRoutes[i].layout)\n      // console.log('mainRoutes', mainRoutes[i].path)\n      return name[2] ? name[2].toUpperCase() : ''\n    }\n    return \"Brand\";\n  };\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container fluid>\n        <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\n          <Button\n            variant=\"dark\"\n            className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\n            onClick={mobileSidebarToggle}\n          >\n            <i className=\"fas fa-ellipsis-v\"></i>\n          </Button>\n          <Navbar.Brand\n            href=\"#home\"\n            onClick={(e) => e.preventDefault()}\n            className=\"mr-2\"\n          >\n            {getBrandText()}\n          </Navbar.Brand>\n        </div>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"nav mr-auto\" navbar>\n            {/* <Nav.Item>\n              <Nav.Link\n                data-toggle=\"dropdown\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n                className=\"m-0\"\n              >\n                <i className=\"nc-icon nc-palette\"></i>\n                <span className=\"d-lg-none ml-1\">Dashboard</span>\n              </Nav.Link>\n            </Nav.Item> */}\n            <Dropdown as={Nav.Item}>\n              <Dropdown.Toggle\n                as={Nav.Link}\n                data-toggle=\"dropdown\"\n                id=\"dropdown-67443507\"\n                variant=\"default\"\n                className=\"m-0\"\n              >\n                <i className=\"nc-icon nc-planet\"></i>\n                <span className=\"notification\">5</span>\n                <span className=\"d-lg-none ml-1\">Notification</span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 1\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 2\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 3\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 4\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Another notification\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            {/* <Nav.Item>\n              <Nav.Link\n                className=\"m-0\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <i className=\"nc-icon nc-zoom-split\"></i>\n                <span className=\"d-lg-block\"> Search</span>\n              </Nav.Link>\n            </Nav.Item> */}\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n            {/* <Nav.Item>\n              <Nav.Link\n                className=\"m-0\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <span className=\"no-icon\">Account</span>\n              </Nav.Link>\n            </Nav.Item> */}\n            <Dropdown as={Nav.Item}>\n              <Dropdown.Toggle\n                aria-expanded={false}\n                aria-haspopup={true}\n                as={Nav.Link}\n                data-toggle=\"dropdown\"\n                id=\"navbarDropdownMenuLink\"\n                variant=\"default\"\n                className=\"m-0\"\n              >\n                <span className=\"no-icon\">{userDetail?.name || \"-\"}</span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu\n                aria-labelledby=\"navbarDropdownMenuLink\"\n                style={{ left: \"-80px\" }}\n              >\n                <Dropdown.Item onClick={(e) => history.push(\"/admin/profile\")}>\n                  Profile\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={(e) => history.push(\"/admin/change-password\")}\n                >\n                  Change Password\n                </Dropdown.Item>\n                <Dropdown.Item onClick={(e) => logout()}>Log out</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer px-0 px-lg-3\">\n        <Container fluid>\n          <nav>\n            {/* <ul className=\"footer-menu\">\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Home\n                </a>\n              </li>\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Company\n                </a>\n              </li>\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Portfolio\n                </a>\n              </li>\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Blog\n                </a>\n              </li>\n            </ul> */}\n            <p className=\"copyright text-center\">\n              © {new Date().getFullYear()} <a href=\"#\">Cyber Octopus</a>\n            </p>\n          </nav>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { useLocation, NavLink } from \"react-router-dom\";\n\nimport { Nav } from \"react-bootstrap\";\n\nimport logo from \"assets/img/reactlogo.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar({ color, image, routes }) {\n  const location = useLocation();\n  const activeRoute = (routeName) => {\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  return (\n    <div className=\"sidebar\" data-image={image} data-color={color}>\n      <div\n        className=\"sidebar-background\"\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n        }}\n      />\n      <div className=\"sidebar-wrapper\">\n        <div className=\"logo d-flex align-items-center justify-content-start\">\n          <Link\n            to=\"/\"\n            className=\"simple-text logo-mini mx-1\"\n          >\n            <div className=\"logo-img\">\n              <img\n                src={require(\"assets/img/reactlogo.png\").default}\n                alt=\"...\"\n              />\n            </div>\n          </Link>\n          <Link className=\"simple-text\" to=\"/admin/dashboard\">\n           Cyber Octopus\n          </Link>\n        </div>\n        <Nav>\n          {routes.map((prop, key) => {\n            if (!prop.redirect)\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            return null;\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n  Form,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nfunction Dashboard() {\n  return <></>;\n}\n\nexport default Dashboard;\n","import Dashboard from \"views/Dashboard.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport TableList from \"views/TableList.js\";\n\nimport TechnologyList from \"views/technology/list\";\nimport ExpertList from \"views/experts/list\";\nimport CustomerList from \"views/customer/list\";\nimport TemplateList from \"views/template/list\";\nimport CmsList from \"views/cms/list\";\nimport FaqList from \"views/faq/list\";\nimport QuestList from \"views/quest/list\";\nimport LawList from \"views/law/list\"\n\nimport GlobalAdd from \"views/global/index\";\n\nexport const sidebarRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/insights\",\n    name: \"Insights\",\n    icon: \"nc-icon nc-circle-09\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/quests\",\n    name: \"Quests\",\n    icon: \"nc-icon nc-circle-09\",\n    component: QuestList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/law\",\n    name: \"Cyber Law\",\n    icon: \"nc-icon nc-circle-09\",\n    component: LawList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/attack\",\n    name: \"Cyber Attacks\",\n    icon: \"nc-icon nc-circle-09\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/payments\",\n  //   name: \"Payments\",\n  //   icon: \"nc-icon nc-circle-09\",\n  //   component: UserProfile,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/users\",\n  //   name: \"Users\",\n  //   icon: \"nc-icon nc-circle-09\",\n  //   component: UserProfile,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/technology\",\n    name: \"Technology\",\n    icon: \"nc-icon nc-circle-09\",\n    component: TechnologyList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/expert\",\n    name: \"Expert\",\n    icon: \"nc-icon nc-circle-09\",\n    component: ExpertList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/customer\",\n    name: \"Customer\",\n    icon: \"nc-icon nc-circle-09\",\n    component: CustomerList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/template\",\n    name: \"Template\",\n    icon: \"nc-icon nc-circle-09\",\n    component: TemplateList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/cms\",\n    name: \"CMS\",\n    icon: \"nc-icon nc-circle-09\",\n    component: CmsList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/faq\",\n    name: \"FAQ\",\n    icon: \"nc-icon nc-circle-09\",\n    component: FaqList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/inbox\",\n    name: \"Inbox\",\n    icon: \"nc-icon nc-circle-09\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/settings\",\n    name: \"Settings\",\n    icon: \"nc-icon nc-circle-09\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/global\",\n    name: \"Global Settings\",\n    icon: \"nc-icon nc-circle-09\",\n    component: GlobalAdd,\n    layout: \"/admin\",\n  },\n];\n","export default __webpack_public_path__ + \"static/media/sidebar-3.9992d0ce.jpg\";","import React, { Component } from \"react\";\nimport { useLocation, Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n\nimport { mainRoutes, } from \"routes.js\";\nimport { sidebarRoutes } from \"siderbar.js\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\n\nfunction Admin() {\n  const [image, setImage] = React.useState(sidebarImage);\n  const [color, setColor] = React.useState(\"black\");\n  const [hasImage, setHasImage] = React.useState(true);\n  const location = useLocation();\n  const mainPanel = React.useRef(null);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n        return (\n          <Route\n            path={'/admin'+prop.path}\n            render={(props) => <prop.component {...props} />}\n            key={key}\n            exact={true}\n          />\n        );\n    });\n  };\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainPanel.current.scrollTop = 0;\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      var element = document.getElementById(\"bodyClick\");\n      element.parentNode.removeChild(element);\n    }\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Sidebar\n          color={color}\n          image={hasImage ? image : \"\"}\n          routes={sidebarRoutes}\n        />\n        <ToastContainer limit={1} />\n        <div className=\"main-panel\" ref={mainPanel}>\n          <AdminNavbar />\n          <div className=\"content\">\n            <Switch>{getRoutes(mainRoutes)}</Switch>\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Admin;\n","import React, { Component } from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n\nimport { dashboardRoutes, authRoutes } from \"routes.js\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\n\nfunction Auth() {\n  const [image, setImage] = React.useState(sidebarImage);\n  const [color, setColor] = React.useState(\"black\");\n  const [hasImage, setHasImage] = React.useState(true);\n  const location = useLocation();\n  const mainPanel = React.useRef(null);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/Auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => <prop.component {...props} />}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      {/* <div className=\"wrapper\"> */}\n      <div className=\"content\">\n        <ToastContainer limit={1} />\n        <Switch>\n          {getRoutes(authRoutes)}\n          <Redirect from=\"/\" to=\"/auth/login\" />\n        </Switch>\n      </div>\n      {/* </div> */}\n    </>\n  );\n}\n\nexport default Auth;\n","import React, { useState, useEffect } from \"react\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport Auth from \"layouts/Auth\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function App() {\n  const { token, userId } = useSelector((state) => state.authReducer);\n\n  if (!token && !userId) {\n    return <AuthStack />;\n  }\n\n  return <Route path=\"/\" render={(props) => <AdminLayout {...props} />} />;\n}\n\nconst AuthStack = () => {\n  return <Route path=\"/\" render={(props) => <Auth {...props} />} />;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/custom.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-phone-number-input/style.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </Switch>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}